{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","disId","rating","comment","console","log","JSON","stringify","alert","color","git","p","isOpen","toggle","onSubmit","md","htmlFor","Select","model","Text","placeholder","validators","minLength","show","messages","Textarea","row","type","Component","RenderDish","in","transformProps","exitTransform","description","RenderComments","comments","dishId","list","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","href","height","navbar","outline","innerRef","input","check","RenderLeader","leader","tag","left","middle","object","body","heading","subheading","designation","About","head","leaders","leadersLoading","leadersErrMess","title","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","text","size","offset","checkbox","select","textarea","Footer","RenderCard","item","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchleaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEaA,EAAS,WAClB,OAEI,cADA,CACA,OAAKC,UAAU,SAAf,UACI,sBAAMA,UAAW,oDACjB,gDCPCC,EAAU,mECMvB,SAASC,EAAT,GAA0C,IAAhBC,EAAe,EAAfA,KAAe,EAATC,QAC5B,OACI,cAAC,IAAD,UAEI,eAAC,IAAD,CAAMC,GAAE,gBAAYF,EAAKG,IAAzB,UAEA,cAAC,IAAD,CAASC,MAAM,OAAOC,IAAKP,EAAUE,EAAKM,MAAOC,IAAKP,EAAKQ,OACvD,cAAC,IAAD,UACA,cAAC,IAAD,UAAYR,EAAKQ,cASjC,IAoDeC,EApDF,SAACC,GACV,IAAMC,EAAMD,EAAME,OAAOA,OAAOC,KAAI,SAACb,GACjC,OAEI,qBAAKH,UAAU,sBAAf,SACG,cAACE,EAAD,CAAgBC,KAAQA,KADgBA,EAAKG,OAMxD,OAAGO,EAAME,OAAOE,UAER,qBAAKjB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAKRa,EAAME,OAAOG,QAEb,qBAAKlB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAKa,EAAME,OAAOG,cAS1B,sBAAKlB,UAAW,YAAhB,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMK,GAAI,QAAV,oBAChB,cAAC,IAAD,CAAgBc,QAAM,EAAtB,qBAEJ,sBAAKnB,UAAW,SAAhB,UACA,wCACA,6BAGJ,qBAAKA,UAAU,MAAf,SACSc,Q,uBC5DnBM,EAAU,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC9BC,EAAU,SAACC,GAAD,OAAQ,SAACH,GAAD,OAAWA,GAAQA,EAAIC,QAAUE,IAGnDC,E,kDACF,WAAYZ,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAQ,CACTC,aAAc,GAGlB,EAAKC,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPN,E,+CAYd,WACIE,KAAKC,SAAS,CAACL,aAAaI,KAAKL,MAAMC,gB,0BAGvC,SAAaM,GACTF,KAAKlB,MAAMqB,YAAYH,KAAKlB,MAAMsB,MAAOF,EAAOG,OAAOH,EAAOtB,KAAKsB,EAAOI,SAC1EC,QAAQC,IAAI,sBAAuBC,KAAKC,UAAUR,IAClDS,MAAM,qBAAsBF,KAAKC,UAAUR,M,oBAGvD,WAAS,IAzBKT,EAyBN,OACR,OACI,gCACA,eAAC,IAAD,CAASmB,MAAM,QAAQvC,QAAW2B,KAAKH,YAAvC,UACA,sBAAM5B,UAAW,mBAAkB4C,KAAG,EAACC,GAAC,IADxC,oBAGA,eAAC,IAAD,CAAOC,OAASf,KAAKL,MAAMC,YAAaoB,OAAQhB,KAAKH,YAArD,UACQ,cAAC,IAAD,CAAamB,OAAUhB,KAAKH,YAA5B,4BAEA,cAAC,IAAD,UACE,eAAC,YAAD,CAAWoB,SAAW,SAACf,GAAD,OAAY,EAAKH,aAAaG,IAApD,UACI,cAAC,IAAD,CAAKjC,UAAW,aAAhB,SACI,eAAC,IAAD,CAAKiD,GAAI,GAAT,UACA,cAAC,IAAD,CAAOC,QAAQ,SAAf,sBACA,eAAC,UAAQC,OAAT,CAAgBC,MAAM,UAAUzC,KAAK,SACrCX,UAAU,eADV,UAEI,uCACA,uCACA,uCACA,uCACA,+CAIR,cAAC,IAAD,CAAKA,UAAU,aAAf,SACA,eAAC,IAAD,CAAKiD,GAAI,GAAT,UACI,cAAC,IAAD,CAAOC,QAAQ,OAAf,yBAEA,cAAC,UAAQG,KAAT,CAAcD,MAAM,QAAS9C,GAAG,OAAOK,KAAK,OAC5C2C,YAAY,YACZtD,UAAW,eACXuD,WAAa,CACTnC,WAASoC,WAzDrBhC,EAyD0C,EAzDnC,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAyDQD,UAAYA,EAAU,OAExD,cAAC,SAAD,CACMvB,UAAU,cACVoD,MAAM,QACNK,KAAK,UACLC,SAAW,CACPtC,SAAU,WACVoC,UAAW,qCACXjC,UAAY,wCAM9B,cAAC,IAAD,CAAKvB,UAAW,aAAhB,SACA,eAAC,IAAD,CAAKiD,GAAI,GAAT,UACI,cAAC,IAAD,CAAOC,QAAQ,UAAf,sBACA,cAAC,UAAQS,SAAT,CAAkBP,MAAO,WAAW9C,GAAG,UAAUK,KAAK,UACtDiD,IAAI,IACJ5D,UAAU,sBAId,cAAC,IAAD,CAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAKiD,GAAI,EAAT,SACA,cAAC,IAAD,CAAQY,KAAM,SAASlB,MAAM,UAA7B,uC,GAjFAmB,aAwG1B,SAASC,EAAT,GAA6B,IAAR5D,EAAO,EAAPA,KACjB,OAAW,MAARA,EAEC,cAAC,gBAAD,CAAe6D,IAAE,EAACC,eAAiB,CAC/BC,cAAe,+BADnB,SAGC,eAAC,IAAD,WACI,cAAC,IAAD,CAAS3D,MAAM,OAAOC,IAAKP,EAAUE,EAAKM,MAAOC,IAAKP,EAAKQ,OAC3D,eAAC,IAAD,WACA,cAAC,IAAD,UACKR,EAAKQ,OAEV,cAAC,IAAD,UACKR,EAAKgE,sBASf,wBAMP,SAASC,EAAT,GAAwD,IAA/BC,EAA8B,EAA9BA,SAASnC,EAAqB,EAArBA,YAAYoC,EAAS,EAATA,OAE3C,GAAgB,MAAZD,EAAkB,CAElB,IAAIE,EAAOF,EAASrD,KAAI,SAACqD,GAErB,OACI,cAAC,OAAD,CAAML,IAAE,EAAR,SACA,6BACI,gCACI,4BAAIK,EAAShC,UACb,mCAAMgC,EAASG,OAAf,IACC,IAAIC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAYC,OAAO,IAAIC,KAAKA,KAAKC,MAAMX,EAASY,eAJzHZ,EAAS/D,SAW1B,OACI,sBAAKN,UAAU,sBAAf,UACI,0CACA,oBAAIA,UAAU,gBAAd,SACI,cAAC,UAAD,CAASgE,IAAE,EAAX,SACCO,MAGL,cAAC,EAAD,CAAapC,MAAOmC,EAAQpC,YAAeA,OAK/C,OACI,wBA2ChB,IAkEegD,EAlEI,SAACrE,GAEZ,OAAGA,EAAMI,UAED,qBAAKjB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAKRa,EAAMK,QAEN,qBAAKlB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAKa,EAAMK,cAON,MAAdL,EAAMV,KAEb,sBAAKH,UAAW,YAAhB,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMK,GAAI,QAAV,oBAChB,cAAC,IAAD,CAAgBc,QAAM,EAAtB,SAAwBN,EAAMV,KAAKQ,UAEvC,sBAAKX,UAAW,SAAhB,UACA,mCAAMa,EAAMV,KAAKQ,QACjB,6BAGR,sBAAKX,UAAU,MAAf,UACI,qBAAKA,UAAY,sBAAjB,SACA,cAAC+D,EAAD,CAAY5D,KAAOU,EAAMV,SAEzB,qBAAKH,UAAW,oBAAhB,SACI,cAACoE,EAAD,CAAgBC,SAAWxD,EAAMwD,SACjCnC,YAAcrB,EAAMqB,YACpBoC,OAASzD,EAAMV,KAAKG,aAexB,yBC7JG6E,E,kDAjHX,WAAYtE,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAO,CACR0D,WAAU,EACVzD,aAAY,GAGhB,EAAK0D,UAAY,EAAKA,UAAUxD,KAAf,gBACjB,EAAKD,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKyD,YAAa,EAAKA,YAAYzD,KAAjB,gBATJ,E,+CAalB,WACIE,KAAKC,SAAS,CAACL,aAAaI,KAAKL,MAAMC,gB,yBAI3C,SAAY4D,GACRxD,KAAKH,cACLc,MAAM,YAAcX,KAAKyD,SAASC,MAAQ,aAAe1D,KAAK2D,SAASD,MAAO,aAAc1D,KAAK4D,SAASC,SAC1GL,EAAMM,mB,uBAGV,WACI9D,KAAKC,SAAS,CAACoD,WAAYrD,KAAKL,MAAM0D,c,oBAG1C,WAAS,IAAD,OACJ,OAEI,cADA,CACC,IAAMU,SAAP,WAEA,cAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,KAApB,SACI,sBAAKhG,UAAU,YAAf,UACI,cAAC,IAAD,CAAeI,QAAS2B,KAAKsD,YAC7B,cAAC,IAAD,CAAarF,UAAY,UAAUiG,KAAK,IAAxC,SACI,qBAAKzF,IAAKP,EAAU,kBAAoBiG,OAAO,KAAK3F,MAAM,KAC1DG,IAAI,2BAER,eAAC,IAAD,CAAUoC,OAAQf,KAAKL,MAAM0D,UAAWe,QAAM,EAA9C,UACA,eAAC,IAAD,CAAKA,QAAM,EAAX,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASnG,UAAU,WAAWK,GAAG,QAAjC,UACI,sBAAML,UAAU,qBADpB,aAIJ,cAAC,IAAD,UACI,eAAC,IAAD,CAASA,UAAU,WAAWK,GAAG,WAAjC,UACI,sBAAML,UAAU,qBADpB,iBAIJ,cAAC,IAAD,UACI,eAAC,IAAD,CAASA,UAAU,WAAWK,GAAG,QAAjC,UACI,sBAAML,UAAU,qBADpB,aAIJ,cAAC,IAAD,UACI,eAAC,IAAD,CAASA,UAAU,WAAWK,GAAG,aAAjC,UACI,sBAAML,UAAU,6BADpB,sBAKR,cAAC,IAAD,CAAKA,UAAU,UAAUmG,QAAM,EAA/B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQC,SAAO,EAAChG,QAAS2B,KAAKH,YAA9B,SACI,sBAAM5B,UAAU,sBAAhB,iCAOpB,cAAC,IAAD,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAW,kBAAhB,UACI,uDACA,+LAKhB,eAAC,IAAD,CAAO8C,OAASf,KAAKL,MAAMC,YAAaoB,OAAQhB,KAAKH,YAArD,UACI,cAAC,IAAD,CAAamB,OAAUhB,KAAKH,YAA5B,mBACA,cAAC,IAAD,UACI,eAAC,IAAD,CAAMoB,SAAUjB,KAAKuD,YAArB,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOpC,QAAQ,WAAf,uBACA,cAAC,IAAD,CAAOW,KAAK,OAAOvD,GAAG,WAAWK,KAAK,WACrC0F,SAAU,SAACC,GAAD,OAAW,EAAKd,SAAUc,QAGzC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOpD,QAAQ,WAAf,uBACA,cAAC,IAAD,CAAOW,KAAK,WAAWvD,GAAG,WAAWK,KAAK,WACzC0F,SAAU,SAACC,GAAD,OAAW,EAAKZ,SAAUY,QAEzC,cAAC,IAAD,CAAWC,OAAK,EAAhB,SACI,eAAC,IAAD,CAAOA,OAAK,EAAZ,UACI,cAAC,IAAD,CAAO1C,KAAK,WAAWlD,KAAK,WAC3B0F,SAAU,SAACC,GAAD,OAAW,EAAKX,SAAUW,KAFzC,oBAKJ,cAAC,IAAD,CAAQzC,KAAM,SAAS4B,MAAM,SAASzF,UAAU,UAAhD,kC,GAzGH8D,aCIrB,SAAS0C,EAAT,GAAsD,IAA9BC,EAA6B,EAA7BA,OAAQxF,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QACvC,OAAGD,EAEK,cAAC,EAAD,IAGCC,EAED,6BAAKA,IAKD,cAAC,OAAD,CAAM8C,IAAE,EAAR,SACE,eAAC,IAAD,CAAO0C,IAAI,KAAX,UACE,cAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,EAAlB,SACI,cAAC,IAAD,CAAOC,QAAM,EAACrG,IAAMP,EAAUwG,EAAOhG,MAAOC,IAAK+F,EAAO9F,SAE5D,eAAC,IAAD,CAAOmG,MAAI,EAAC9G,UAAU,OAAtB,UACE,cAAC,IAAD,CAAO+G,SAAO,EAAd,SAAgBN,EAAO9F,OACvB,eAAC,IAAD,CAAOqG,YAAU,EAAjB,cAAoBP,EAAOQ,YAA3B,OACA,mBAAGjH,UAAW,OAAd,SAAsByG,EAAOtC,sBA2BnD,IA6Ee+C,EA7ED,SAACrG,GACX,IAAMsG,EAAOtG,EAAMuG,QAAQA,QAAQpG,KAAI,SAACyF,GACpC,OACI,qBAAsBzG,UAAW,cAAjC,SACI,cAACwG,EAAD,CAAcC,OAASA,EAAQxF,UAAYJ,EAAMwG,eAAgBnG,QAAUL,EAAMyG,kBAD1Eb,EAAOnG,OAMd,OACA,sBAAKN,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMK,GAAG,QAAT,oBAChB,cAAC,IAAD,CAAgBc,QAAM,EAAtB,yBAEJ,sBAAKnB,UAAU,SAAf,UACI,0CACA,6BAGR,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,6CACA,0aACA,gFAAkD,gDAAlD,qIAEJ,qBAAKA,UAAU,kBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAYA,UAAU,wBAAtB,+BACA,cAAC,IAAD,UACI,qBAAIA,UAAU,UAAd,UACI,oBAAIA,UAAU,QAAd,qBACA,oBAAIA,UAAU,QAAd,yBACA,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,QAAd,kCACA,oBAAIA,UAAU,QAAd,wBACA,oBAAIA,UAAU,QAAd,uBACA,oBAAIA,UAAU,QAAd,0BAKhB,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUA,UAAU,WAApB,SACI,6BAAYA,UAAU,aAAtB,UACI,mBAAGA,UAAU,OAAb,+FAEA,yBAAQA,UAAU,oBAAlB,wBACA,sBAAMuH,MAAM,eAAZ,6FAQpB,sBAAKvH,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wDAEJ,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,CAAOuE,MAAI,EAAX,SACI,cAAC,UAAD,CAASP,IAAE,EAAX,SACKmD,eCtH/B/F,EAAU,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC9BC,EAAU,SAACC,GAAD,OAAQ,SAACH,GAAD,OAAWA,GAAQA,EAAIC,QAAUE,IACnDgC,EAAW,SAAChC,GAAD,OAAQ,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAClDgG,EAAU,SAACnG,GAAD,OAAUoG,MAAMC,OAAOrG,KACjCsG,EAAY,SAACtG,GAAD,MAAQ,4CAA4CuG,KAAKvG,IAgS5DwG,E,kDA5RX,WAAYhH,GAAO,IAAD,8BACd,cAAMA,IAiBDiB,aAAe,EAAKA,aAAaD,KAAlB,gBAlBN,E,gDA8ElB,SAAaI,GACTK,QAAQC,IAAI,sBAAuBC,KAAKC,UAAUR,IAClDS,MAAM,qBAAsBF,KAAKC,UAAUR,IAC3CF,KAAKlB,MAAMiH,oBACX/F,KAAKlB,MAAMkH,aACP9F,EAAO+F,UACP/F,EAAOgG,SACPhG,EAAOiG,OACPjG,EAAOkG,MACPlG,EAAOmG,MACPnG,EAAOoG,YACPpG,EAAOqG,W,oBAKf,WAAU,IAAD,OAET,OACQ,sBAAKtI,UAAU,YAAf,UACA,sBAAKA,UAAU,MAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMK,GAAI,QAAV,oBAChB,cAAC,IAAD,CAAgBc,QAAM,EAAtB,2BAEJ,sBAAKnB,UAAW,SAAhB,UACA,8CACA,6BAGJ,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACA,wDAEA,sBAAKA,UAAU,8BAAf,UACQ,6CACA,gEACyB,uBADzB,2BAEwB,uBAFxB,YAGS,uBACT,mBAAGA,UAAU,gBAJb,mBAI+C,uBAC/C,mBAAGA,UAAU,cALb,mBAK6C,uBAC7C,mBAAGA,UAAU,mBANb,KAMoC,mBAAGiG,KAAK,4BAAR,sCAG5C,qBAAKjG,UAAU,8BAAf,SACI,uDAEJ,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,YAAYuI,KAAK,QAAhC,UACI,oBAAGA,KAAK,SAASvI,UAAU,kBAAkBiG,KAAK,mBAAlD,UAAqE,mBAAGjG,UAAU,gBAAlF,WACA,oBAAGuI,KAAK,SAASvI,UAAU,eAAeiG,KAAK,iBAA/C,UAAgE,mBAAGjG,UAAU,gBAA7E,YACA,oBAAGuI,KAAK,SAASvI,UAAU,kBAAkBiG,KAAK,4BAAlD,UAA8E,mBAAGjG,UAAU,qBAA3F,oBAIZ,sBAAKA,UAAW,kBAAhB,UACI,qBAAKA,UAAU,SAAf,SACI,0DAEJ,qBAAKA,UAAW,kBAAhB,SAEI,eAAC,OAAD,CAAOoD,MAAO,WAAWJ,SAAW,SAACf,GAAD,OAAW,EAAKH,aAAaG,IAAjE,UACI,eAAC,IAAD,CAAKjC,UAAW,aAAhB,UACI,cAAC,IAAD,CAAOkD,QAAQ,YAAYD,GAAI,EAA/B,yBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UAYQ,cAAC,UAAQuF,KAAT,CAAcpF,MAAM,aAAa9C,GAAG,YAAYK,KAAK,YACpD2C,YAAY,aACZtD,UAAU,eACVuD,WAAa,CACTnC,WAAUoC,UAAWA,EAAU,GAAIjC,UAAWA,EAAU,OAGxD,cAAC,SAAD,CACGvB,UAAU,cACVoD,MAAO,aACPK,KAAM,UACNC,SAAW,CACPtC,SAAU,YACVoC,UAAY,oCACZjC,UAAY,yCAKpC,eAAC,IAAD,CAAKvB,UAAW,aAAhB,UACI,cAAC,IAAD,CAAOkD,QAAQ,WAAWD,GAAI,EAA9B,wBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQuF,KAAT,CAAcpF,MAAM,YAAY9C,GAAG,WAAWK,KAAK,WAC/C2C,YAAY,YACbtD,UAAU,eACVuD,WAAY,CACXnC,WAAUoC,UAAWA,EAAU,GAAIjC,UAAWA,EAAU,OAEzD,cAAC,SAAD,CACKvB,UAAU,cACVoD,MAAM,YACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVoC,UAAW,oCACXjC,UAAW,yCAK/B,eAAC,IAAD,CAAKvB,UAAW,aAAhB,UACI,cAAC,IAAD,CAAOkD,QAAQ,SAASD,GAAI,EAA5B,0BACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQuF,KAAT,CAAcpF,MAAM,UAAU9C,GAAG,SAASK,KAAK,SAC3C2C,YAAY,cACZtD,UAAW,eACXuD,WAAY,CACRnC,WAAUoC,UAAWA,EAAU,GAAIjC,UAAWA,EAAU,IAAKiG,cAIjE,cAAC,SAAD,CACIxH,UAAU,cACVoD,MAAM,UACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVoC,UAAW,iCACXjC,UAAW,6BACXiG,SAAU,4BAK9B,eAAC,IAAD,CAAKxH,UAAW,aAAhB,UACI,cAAC,IAAD,CAAOkD,QAAQ,QAAQD,GAAI,EAA3B,mBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQuF,KAAT,CAAcpF,MAAM,SAAS9C,GAAG,QAAQK,KAAK,QACzC2C,YAAY,QACZtD,UAAU,eAEVuD,WAAY,CACRnC,WAAUuG,gBAId,cAAC,SAAD,CACI3H,UAAU,cACVoD,MAAM,SACNK,KAAK,UACLC,SAAU,CACNtC,SAAU,WACVuG,WAAY,iCAKhC,eAAC,IAAD,CAAK3H,UAAW,aAAhB,UACI,cAAC,IAAD,CAAKiD,GAAI,CAACwF,KAAK,EAAEC,OAAO,GAAxB,SACQ,qBAAK1I,UAAU,aAAf,SACA,eAAC,IAAD,CAAOuG,OAAK,EAAZ,UACI,cAAC,UAAQoC,SAAT,CAAkBvF,MAAM,UAAUzC,KAAK,QACvCX,UAAU,qBACR,GACF,iEAKZ,cAAC,IAAD,CAAKiD,GAAI,CAACwF,KAAK,EAAEC,OAAO,GAAxB,SACG,eAAC,UAAQE,OAAT,CAAgBxF,MAAM,eAAezC,KAAK,cACzCX,UAAU,eADX,UAEI,0CACA,mDAIX,eAAC,IAAD,CAAKA,UAAW,aAAhB,UACI,cAAC,IAAD,CAAOkD,QAAQ,UAAUD,GAAI,EAA7B,2BACA,cAAC,IAAD,CAAKA,GAAI,GAAT,SACI,cAAC,UAAQ4F,SAAT,CAAkBzF,MAAM,WAAW9C,GAAG,UAAUK,KAAK,UACjDiD,IAAI,KACJ5D,UAAU,sBAGtB,cAAC,IAAD,CAAKA,UAAW,aAAhB,SACI,cAAC,IAAD,CAAKiD,GAAI,CAACwF,KAAK,GAAIC,OAAO,GAA1B,SACI,cAAC,IAAD,CAAQ7E,KAAK,SAASlB,MAAM,UAA5B,8C,GAjRVmB,aCsCPgF,MA/Cf,SAAgBjI,GACZ,OACI,qBAAKb,UAAU,SAAf,SACA,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,uCACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,cAAC,IAAD,CAAMK,GAAG,SAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,wBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,cAAT,gCAGZ,sBAAKL,UAAU,iBAAf,UACI,6CACA,gEACqB,uBADrB,2BAEoB,uBAFpB,YAGK,uBACT,mBAAGA,UAAU,sBAJT,mBAIiD,uBACrD,mBAAGA,UAAU,oBALT,mBAK+C,uBACnD,mBAAGA,UAAU,yBANT,KAMsC,mBAAGiG,KAAK,4BAAR,sCAI1C,qBAAKjG,UAAU,oCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,iCAAiCiG,KAAK,sBAAnD,SAAyE,mBAAGjG,UAAU,wBACtF,mBAAGA,UAAU,mCAAmCiG,KAAK,0CAArD,SAA+F,mBAAGjG,UAAU,qBAC5G,mBAAGA,UAAU,mCAAmCiG,KAAK,8BAArD,SAAmF,mBAAGjG,UAAU,qBAChG,mBAAGA,UAAU,kCAAkCiG,KAAK,sBAApD,SAA0E,mBAAGjG,UAAU,oBACvF,mBAAGA,UAAU,iCAAiCiG,KAAK,sBAAnD,SAAyE,mBAAGjG,UAAU,oBACtF,mBAAGA,UAAU,sBAAsBiG,KAAK,UAAxC,SAAkD,mBAAGjG,UAAU,+BAI3E,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oFCnCpB,SAAS+I,EAAT,GAAiD,IAA3BC,EAA0B,EAA1BA,KAAM/H,EAAoB,EAApBA,UAAWC,EAAS,EAATA,QACnC,OAAGD,EAEK,cAAC,EAAD,IAGCC,EAED,6BAAKA,IAKJ,cAAC,gBAAD,CAAe8C,IAAE,EAACC,eAAiB,CACpBC,cAAe,+BAD9B,SAGD,eAAC,IAAD,WACI,cAAC,IAAD,CAAS1D,IAAMP,EAAU+I,EAAKvI,MAAOC,IAAOsI,EAAKrI,OACjD,eAAC,IAAD,WACI,cAAC,IAAD,UAAYqI,EAAKrI,OAChBqI,EAAK/B,YAAc,cAAC,IAAD,UAAe+B,EAAK/B,cAA8B,KACtE,cAAC,IAAD,UAAW+B,EAAK7E,sBAkCrB8E,MA1Bf,SAAcpI,GACV,OACI,qBAAKb,UAAW,YAAhB,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC+I,EAAD,CAAYC,KAAMnI,EAAMV,KACpBc,UAAYJ,EAAMqI,cAClBhI,QAAUL,EAAMsI,kBAGxB,qBAAKnJ,UAAU,oBAAf,SACI,cAAC+I,EAAD,CAAYC,KAAMnI,EAAMuI,UACxBnI,UAAYJ,EAAMwI,aAClBnI,QAAUL,EAAMyI,iBAGpB,qBAAKtJ,UAAU,oBAAf,SACI,cAAC+I,EAAD,CAAYC,KAAMnI,EAAMuG,QACvBnG,UAAYJ,EAAMwG,eAClBnG,QAAUL,EAAMyG,yB,QCvDxBiC,EAAc,cACdC,EAAiB,iBACjBC,EAAe,gBACfC,EAAa,aACbC,EAAe,eACfC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAa,aACbC,EAAgB,gBAChBC,EAAiB,kBACjBC,EAAgB,iBAChBC,EAAc,cCSdhI,EAAc,SAACoC,EAAQlC,EAAQoC,EAAQnC,GAAzB,OAAoC,SAAC8H,GAC5D,IAAMC,EAAa,CACf9F,OAASA,EACTlC,OAAQA,EACRoC,OAAOA,EACPnC,QAASA,GAIb,OADA+H,EAAWnF,MAAO,IAAIF,MAAOsF,cACtBC,MAAMrK,EAAU,WAAW,CAC9BsK,OAAQ,OACRzD,KAAMtE,KAAKC,UAAU2H,GACrBI,QAAQ,CACJ,eAAiB,oBAErBC,YAAY,gBAEfC,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAIb,SAAAA,GACE,MAAMA,KAGRH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EAhDI,SAAC9H,GAAD,MAAc,CAGhCwB,KAAMqH,EACNC,QAAQ9I,GA4Ce+I,CAAWT,OACrCU,OAAM,SAAAR,GAAWvI,QAAQC,IAAI,gBAAgBsI,EAAMvC,SAChD5F,MAAM,2CAA6CmI,EAAMvC,cAuCpDY,EAAe,iBAAM,CAG9BrF,KAAKqH,IAIII,GAAc,SAACC,GAAD,MAAc,CACrC1H,KAAMqH,EACNC,QAASI,IAGAC,GAAW,SAACzK,GAAD,MAAa,CACjC8C,KAAMqH,EACNC,QAAQpK,IA0BC0K,GAAgB,SAACF,GAAD,MAAc,CACvC1H,KAAMqH,EACNC,QAASI,IAGAG,GAAa,SAACrH,GAAD,MAAe,CACrCR,KAAMqH,EACNC,QAAQ9G,IA4BCsH,GAAgB,iBAAO,CAChC9H,KAAMqH,IAGGU,GAAe,SAACL,GAAD,MAAc,CACtC1H,KAAMqH,EACNC,QAASI,IAGAM,GAAY,SAACC,GAAD,MAAa,CAClCjI,KAAMqH,EACNC,QAASW,IA2BIC,GAAgB,SAACR,GAAD,MAAc,CACvC1H,KAAMqH,EACNC,QAASI,IAGAlE,GAAiB,iBAAO,CACjCxD,KAAOqH,IAGEc,GAAa,SAAC5E,GAAD,MAAc,CACpCvD,KAAMqH,EACNC,QAAS/D,I,SCnLX6E,G,uKAMJ,WACElK,KAAKlB,MAAMqL,cACXnK,KAAKlB,MAAMsL,gBACXpK,KAAKlB,MAAMuL,cACXrK,KAAKlB,MAAMwL,iB,oBAKb,WAAS,IAAD,OAiCR,OACE,gCACE,cAAC,EAAD,IACA,8BACE,cAAC,mBAAD,UACE,cAAC,iBAAD,CAA8CC,WAAa,OAAOC,QAAU,IAA5E,SACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAM,QAAQC,UAtCjB,WACd,OACE,cAAC,EAAD,CACEtM,KAAO,EAAKU,MAAME,OAAOA,OAAO2L,QAAO,SAACvM,GAAD,OAASA,EAAKwM,YAAU,GAC/DzD,cAAgB,EAAKrI,MAAME,OAAOE,UAClCkI,cAAe,EAAKtI,MAAME,OAAOG,QACjCkI,UAAY,EAAKvI,MAAM+L,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAUA,EAAMF,YAAU,GAC9EtD,aAAc,EAAKxI,MAAM+L,WAAW3L,UACpCqI,aAAc,EAAKzI,MAAM+L,WAAW1L,QACpCkG,QAAW,EAAKvG,MAAMuG,QAAQA,QAAQsF,QAAO,SAACjG,GAAD,OAAWA,EAAOkG,YAAU,GACzEtF,eAAiB,EAAKxG,MAAMuG,QAAQnG,UACpCqG,eAAkB,EAAKzG,MAAMuG,QAAQlG,aA6B/B,cAAC,IAAD,CAAO4L,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAK,cAAC,EAAD,CAAM1L,OAAS,EAAKF,MAAME,YACpE,cAAC,IAAD,CAAOyL,KAAK,gBAAgBC,UAzBrB,SAAC,GAAY,IAAXM,EAAU,EAAVA,MACnB,OAEE,aADA,CACC,EAAD,CAAY5M,KAAM,EAAKU,MAAME,OAAOA,OAAO2L,QAAO,SAACvM,GAAD,OAAQA,EAAKG,KAAO0M,SAASD,EAAME,OAAO3I,OAAO,OAAK,GACtGrD,UAAY,EAAKJ,MAAME,OAAOE,UAC9BC,QAAW,EAAKL,MAAME,OAAOG,QAC7BmD,SAAU,EAAKxD,MAAMwD,SAASA,SAASqI,QAAO,SAACrK,GAAD,OAAWA,EAAQiC,SAAW0I,SAASD,EAAME,OAAO3I,OAAO,OACzG4I,gBAAiB,EAAKrM,MAAMwD,SAASnD,QAErCgB,YAAa,EAAKrB,MAAMqB,iBAkBhB,cAAC,IAAD,CAAO4K,OAAK,EAACN,KAAK,aAAaC,UAAW,kBAAM,cAAC,EAAD,CAAS3E,kBAAqB,EAAKjH,MAAMiH,kBAAmBC,aAAgB,EAAKlH,MAAMkH,kBACvI,cAAC,IAAD,CAAOyE,KAAK,WAAWC,UAAY,kBAAK,cAAE,EAAF,CAAUrF,QAAU,EAAKvG,MAAMuG,aACzE,cAAC,IAAD,CAAU/G,GAAI,cATC0B,KAAKlB,MAAMsM,SAASC,SAe7C,cAAC,EAAD,W,GApEatJ,aA0EHuJ,eAAWC,mBAhGD,SAAA5L,GACtB,MAAM,CACJX,OAAOW,EAAMX,OACbsD,SAAU3C,EAAM2C,SAChBuI,WAAWlL,EAAMkL,WACjBxF,QAAU1F,EAAM0F,YAIO,SAAC+C,GAAD,MAAe,CACtCjI,YAAa,SAACoC,EAAOlC,EAAOoC,EAAOnC,GAAtB,OAAkC8H,EAASjI,EAAYoC,EAAOlC,EAAOoC,EAAOnC,KACzF6J,YAAY,WAAM/B,GDmCQ,SAACA,GAUhC,OATGA,EAASjB,GAAc,IASnBoB,MAAMrK,EAAU,UACnByK,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMvC,YAIjCoC,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3J,GAAM,OAAIoJ,EAASqB,GAAUzK,OAClCsK,OAAM,SAAAR,GAAK,OAAIV,EAASmB,GAAaT,EAAMvC,iBC9D1CR,kBAAmB,WAAOqC,EAASoD,UAAQC,MAAM,cACjDrB,cAAe,WAAOhC,GDiFM,SAACA,GAC/B,OAAOG,MAAMrK,EAAS,YACrByK,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMvC,YAIjCoC,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAArG,GAAQ,OAAI8F,EAASuB,GAAYrH,OACtCgH,OAAM,SAAAR,GAAK,OAAIV,EAASsB,GAAeZ,EAAMvC,iBCnG5C8D,YAAa,WAAOjC,GDiHO,SAACA,GAI9B,OAFAA,EAASwB,MAEFrB,MAAMrK,EAAU,cACtByK,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMvC,YAIjCoC,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAoB,GAAM,OAAI3B,EAAS0B,GAAUC,OAClCT,OAAM,SAAAR,GAAK,OAAIV,EAASyB,GAAaf,EAAMvC,iBCtI1C+D,aAAc,WAAOlC,GDuJO,SAACA,GAIhC,OAFCA,EAAS9C,IAAe,IAElBiD,MAAMrK,EAAU,WACrByK,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAGK,IAAIG,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAC3DL,SAAWA,KAGzB,SAAAE,GAEI,MADc,IAAIC,MAAMD,EAAMvC,YAIjCoC,MAAK,SAAAC,GAAQ,OAAGA,EAASM,UACzBP,MAAK,SAAAtD,GAAO,OAAI+C,EAAS6B,GAAW5E,OACpCiE,OAAM,SAAAR,GAAK,OAAIV,EAAS4B,GAAclB,EAAMvC,iBC3K3CP,aAAe,SAACC,EAAWC,EAASC,EAAOC,EAAMC,EAAMC,EAAYC,GAApD,OAAgE6B,ED6LzD,SAACnC,EAAWC,EAAUC,EAAQC,EAAOC,EAAMC,EAAYC,GAAvD,OAAmE,SAAC6B,GACxF,IAAMsD,EAAa,CACfzF,UAAYA,EACZC,SAAWA,EACXC,OAASA,EACTC,MAAQA,EACRC,MAAQA,EACRC,YAAcA,EACdC,QAAUA,GAGd,OADAmF,EAAYxI,MAAO,IAAIF,MAAOsF,cACvBC,MAAMrK,EAAU,WAAY,CAC/BsK,OAAQ,OACRzD,KAAMtE,KAAKC,UAAUgL,GACrBjD,QAAU,CACN,eAAiB,oBAErBC,YAAa,gBAEhBC,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAMA,KAETH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIjI,MAAM,YAAcF,KAAKC,UAAUkI,OACpDU,OAAM,SAAAR,GAAUvI,QAAQC,IAAI,gBAAiBsI,EAAMvC,SAChD5F,MAAM,8CAAgDmI,EAAMvC,aChOsBP,CAAaC,EAAWC,EAASC,EAAOC,EAAMC,EAAMC,EAAYC,QAgFnIgF,CAA6CrB,K,0BC5G3DyB,GAAQ,WAEN,IAFOhM,EAER,uDAFgB,CAC9BT,WAAY,EAAMC,QAAS,KAAMH,OAAQ,IACtC4M,EAAW,uCACV,OAAOA,EAAO9J,MACV,KAAKqH,EACD,oCAAUxJ,GAAV,IAAgBT,WAAU,EAAOC,QAAQ,KAAKH,OAAO4M,EAAOxC,UAIhE,KAAKD,EACD,oCAAUxJ,GAAV,IAAgBT,WAAU,EAAMC,QAAQ,KAAKH,OAAO,KAGxD,KAAKmK,EACD,oCAAUxJ,GAAV,IAAgBT,WAAU,EAAOC,QAAQyM,EAAOxC,QAASpK,OAAO,KAIpE,QACI,OAAOW,IClBNkM,GAAU,WAAqD,IAApDlM,EAAmD,uDAA3C,CAAER,QAAS,KAAMmD,SAAU,IAAKsJ,EAAW,uCACvE,OAAOA,EAAO9J,MACV,KAAKqH,EACD,OAAO,6BAAIxJ,GAAX,IAAkBR,QAAQ,KAAMmD,SAAUsJ,EAAOxC,UAErD,KAAKD,EACD,OAAO,6BAAIxJ,GAAX,IAAkBR,QAASyM,EAAOxC,UAEtC,KAAKD,EACD,IAAI7I,EAAUsL,EAAOxC,QAIrB,OAAO,6BAAIzJ,GAAX,IAAkB2C,SAAS3C,EAAM2C,SAASwJ,OAAOxL,KACrD,QACI,OAAOX,IClBNoM,GAAY,WAAoE,IAAnEpM,EAAkE,uDAA1D,CAACT,WAAW,EAAMC,QAAQ,KAAK0L,WAAW,IAAKe,EAAW,uCACxF,OAAOA,EAAO9J,MACV,KAAKqH,EACD,OAAO,6BAAIxJ,GAAX,IAAkBT,WAAW,EAAOC,QAAS,KAAM0L,WAAYe,EAAOxC,UAEtE,KAAKD,EACD,OAAO,6BAAIxJ,GAAX,IAAkBT,WAAW,EAAMC,QAAS,KAAM0L,WAAY,KAElE,KAAK1B,EACD,OAAO,6BAAIxJ,GAAX,IAAkBT,WAAW,EAAOC,QAASyM,EAAOxC,UAG5D,QACI,OAAOzJ,ICbNqM,GAAS,WAAoE,IAAnErM,EAAkE,uDAA1D,CAACT,WAAY,EAAMC,QAAQ,KAAMkG,QAAS,IAAKuG,EAAW,uCAErF,OAAOA,EAAO9J,MACV,KAAKqH,EACD,oCAAUxJ,GAAV,IAAiBT,WAAU,EAAOC,QAAS,KAAMkG,QAAQuG,EAAOxC,UAEpE,KAAKD,EACD,oCAAWxJ,GAAX,IAAkBT,WAAU,EAAMC,QAAS,KAAMkG,QAAQ,KAE7D,KAAK8D,EACD,oCAAUxJ,GAAV,IAAiBT,WAAU,EAAOC,QAAQyM,EAAOxC,QAAS/D,QAAQ,KAEtE,QACI,OAAO1F,I,wCChBNsM,GAAkB,CAC3BhG,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAM,EACNC,YAAc,OACdC,QAAS,ICCP2F,GCGWC,uBACTC,2BAAgB,cACZpN,OAAQ2M,GACRrJ,SAAUuJ,GACVhB,WAAYkB,GACZ1G,QAAS2G,IACNK,sBAAY,CACXC,SAASL,OAGjBM,2BAAgBC,KAAMC,ODOfC,G,4JAfd,WACC,OACE,cAAC,WAAD,CAAUR,MAAOA,GAAjB,SACA,cAAC,IAAD,UACA,8BACC,cAAC,GAAD,c,GAPanK,aECH4K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae616b8d.chunk.js","sourcesContent":["import React from'react';\r\n\r\nexport const Loading =() =>{\r\n    return(\r\n        //loading spinner to user get to know that dishes are loading\r\n        <div className=\"col-12\">\r\n            <span className= \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading ...</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = \"https://my-json-server.typicode.com/nilam2407/confusion-database\";\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Card, CardImg, CardImgOverlay,  CardTitle,Breadcrumb,BreadcrumbItem } from 'reactstrap';\r\nimport {Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}){\r\n    return(\r\n        <Card>\r\n            {/*  onClick ={()=> onClick(dish.id)} */}\r\n            <Link to= {`/menu/${dish.id}`}> \r\n            {/* link only accepet url so to turn js in url u need to use special backdirection qutoation */}\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\r\n                <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n//function component can also create as below\r\n\r\nconst Menu = (props) =>{\r\n    const menu= props.dishes.dishes.map((dish)=>{\r\n        return(\r\n            \r\n            <div className=\"col-12 col-md-5 m-1\" key ={dish.id}>\r\n               <RenderMenuItem dish = {dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if(props.dishes.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dishes.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    else\r\n        return(\r\n            <div className =\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to ='/Home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className= \"col-12\">\r\n                    <h3> Menu </h3>\r\n                    <hr/>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                    </div>\r\n            \r\n\r\n        );\r\n}\r\n\r\nexport default Menu;","import React,{Component}  from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle,Breadcrumb,BreadcrumbItem, Button,Modal,ModalHeader,ModalBody,Row,Label,Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport{ Control,LocalForm, Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\nconst required =(val) => val && val.length;\r\nconst maxLength=(len) =>(val) => !(val) ||(val.length <= len);\r\nconst minLength =(len) =>(val) =>(val) &&(val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen : false\r\n        }\r\n\r\n        this.toggleModal= this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      \r\n    \r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({isModalOpen:!this.state.isModalOpen})}\r\n    \r\n\r\n            handleSubmit(values){\r\n                this.props.postComment(this.props.disId, values.rating,values.name,values.comment);\r\n                console.log('current state is : '+ JSON.stringify(values));\r\n                alert('current state is :' +JSON.stringify(values));\r\n            }\r\n\r\n    render(){\r\n    return(\r\n        <div>\r\n        <Button  color=\"light\" onClick = {this.toggleModal}> \r\n        <span className =\"fa fa-edit fa-lg\"git p></span>\r\n             Submit Comment</Button>\r\n        <Modal isOpen ={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle ={ this.toggleModal}>\r\n                    Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                  <LocalForm onSubmit ={(values) => this.handleSubmit(values)}>\r\n                      <Row className =\"form-group\">\r\n                          <Col md={10}>\r\n                          <Label htmlFor=\"rating\"> Rating </Label>\r\n                          <Control.Select model=\".rating\" name=\"rating\"\r\n                          className=\"form-control\">\r\n                              <option>1</option>\r\n                              <option>2</option>\r\n                              <option>3</option>\r\n                              <option>4</option>\r\n                              <option>5</option>\r\n                          </Control.Select>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                      <Col md={10}>\r\n                          <Label htmlFor=\"name\"> Your Name </Label> \r\n                         \r\n                          <Control.Text model=\".name\"  id=\"name\" name=\"name\"\r\n                          placeholder=\"Your Name\"\r\n                          className =\"form-control\"\r\n                          validators ={{\r\n                              required,minLength: minLength(3), maxLength : maxLength(15)}}/>\r\n\r\n                              <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".name\"\r\n                                    show=\"touched\"\r\n                                    messages ={{\r\n                                        required :'Required',\r\n                                        minLength :' Must be greater than 2 characters',\r\n                                        maxLength : 'Must be 15 characters or less'\r\n\r\n                                    }}\r\n                                    />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className =\"form-group\">\r\n                      <Col md={10}>\r\n                          <Label htmlFor=\"comment\"> Comment</Label>\r\n                          <Control.Textarea model= \".comment\" id=\"comment\" name=\"comment\"\r\n                          row=\"6\"\r\n                          className=\"form-control\"/>\r\n                          </Col>\r\n                      </Row>\r\n                \r\n                      <Row className=\"form-group\">\r\n                          <Col md={4} >\r\n                          <Button type =\"submit\" color=\"primary\">\r\n                             \r\n                              Submit\r\n                          </Button>\r\n                          </Col>\r\n                      </Row>\r\n                      </LocalForm>  \r\n                    \r\n                </ModalBody>\r\n\r\n\r\n            </Modal>\r\n       \r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n    if(dish != null)\r\n    return(\r\n        <FadeTransform in transformProps ={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'  \r\n}}>\r\n         <Card>\r\n             <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\r\n             <CardBody>\r\n             <CardTitle>\r\n                 {dish.name}\r\n             </CardTitle>\r\n             <CardText>\r\n                 {dish.description}\r\n             </CardText>\r\n             </CardBody>\r\n         </Card>\r\n         </FadeTransform>\r\n    );\r\n\r\nelse \r\n    return(\r\n        <div></div>\r\n        );    \r\n\r\n}\r\n \r\n\r\n function RenderComments({comments,postComment,dishId}) {\r\n   \r\n    if (comments != null) {\r\n        \r\n        let list = comments.map((comments)=>{\r\n\r\n            return(\r\n                <Fade in>\r\n                <li key={comments.id} >\r\n                    <div>\r\n                        <p>{comments.comment}</p>\r\n                        <p>--{comments.author},\r\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}</p>\r\n                    </div>\r\n                    </li>\r\n                </Fade>\r\n            )\r\n        })\r\n   \r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                    {list}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm disId={dishId} postComment = {postComment}/>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    \r\n//     if(comment != null) {\r\n//         const cmnts = comment.map((comment) => {\r\n//             return (\r\n//                 <ul key={comment.id} className=\"list-unstyled\">\r\n//                     <li>\r\n//                         <p> {comment.comment} </p>\r\n//                         <p> -- {comment.author},\r\n//                             &nbsp;\r\n//                             {new Intl.DateTimeFormat('en-US', {\r\n//                                 year: 'numeric',\r\n//                                 month: 'short',\r\n//                                 day: '2-digit'\r\n//                             }).format(new Date(Date.parse(comment.date)))}\r\n//                         </p>\r\n//                     </li>\r\n//                 </ul>\r\n                \r\n//             )\r\n//         })\r\n\r\n//         return (\r\n//             <div className=\"col-12 col-md-5 m-1\">\r\n//                 <h4> Comments </h4>\r\n//                 {cmnts}\r\n//             </div>\r\n//         )\r\n//      }  \r\n       \r\n//      else {\r\n//         return (\r\n//             <div></div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst Dishdetail = (props) =>{\r\n\r\n        if(props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n      else  if(props.dish != null){\r\n             return(\r\n        <div className =\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to ='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className= \"col-12\">\r\n                <h3> {props.dish.name}</h3>\r\n                <hr/>\r\n            </div>\r\n            </div>\r\n        <div className=\"row\">\r\n            <div className = \"col-12 col-md-5 m-1\">\r\n            <RenderDish dish ={props.dish}/>\r\n            </div>\r\n            <div className =\"col-12 col-md m-1\">\r\n                <RenderComments comments ={props.comments}\r\n                postComment ={props.postComment}\r\n                dishId ={props.dish.id}\r\n                //dish id needed to add id to state\r\n                />\r\n            </div>\r\n           \r\n            \r\n             </div>\r\n             \r\n        </div>\r\n        \r\n\r\n    ); }\r\n\r\n    else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}        \r\n\r\n\r\nexport default Dishdetail;","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand,Nav, NavbarToggler, Collapse,Jumbotron, NavItem,Modal,ModalBody,Button,ModalHeader,Form,FormGroup,Label,Input} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            isNavOpen:false,\r\n            isModalOpen:false\r\n        }\r\n        //if we bind this we can use  in jsx as this.toggleNav method instead of using arrow function inside jsx.\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal= this.toggleModal.bind(this);\r\n        this.handleLogin= this.handleLogin.bind(this);\r\n    }\r\n\r\n\r\n    toggleModal(){\r\n        this.setState({isModalOpen:!this.state.isModalOpen})\r\n\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username:\" + this.username.value + \"password: \" + this.password.value +\"Remember: \"+ this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({isNavOpen :!this.state.isNavOpen})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            //react fragment will allow bunch of react element together its also alternate of div element\r\n            <React.Fragment>\r\n                {/* navabar will expand for md or larger screen */}\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav}/>\r\n                    <NavbarBrand className = \"mr-auto\" href='/'>\r\n                        <img src={baseUrl + \"images/logo.png\"}  height=\"30\" width=\"41\" \r\n                        alt=\"Ristorate Con Fusion\"/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/Contactus\">\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className= \"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Oue lipsmacking creations will tickle your culinery senses</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen ={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle ={ this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\"> Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                             innerRef={(input) => this.username =input}/>\r\n                           \r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\"> Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                             innerRef={(input) => this.password =input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                 innerRef={(input) => this.remember =input}/> Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type =\"submit\" value=\"submit\" className=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {Fade, Stagger} from 'react-animation-components';\r\n\r\n\r\n\r\nfunction RenderLeader ({leader, isLoading, errMess}) {\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n            return (\r\n                <Fade in>\r\n                  <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={ baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                      <Media heading>{leader.name}</Media>\r\n                      <Media subheading> {leader.designation} </Media>\r\n                      <p className =\"mt-2\">{leader.description}</p>\r\n                    </Media>\r\n                  </Media>\r\n                  </Fade>\r\n                \r\n              );\r\n        }\r\n    }\r\n\r\n    //     return(\r\n    //         <div className=\"col-12  m-1\">\r\n    //         <Stagger in>\r\n    //         {head}   \r\n    //         </Stagger>\r\n    //         </div>\r\n    //         )\r\n    //     }\r\n    //     else{\r\n    //         return(\r\n    //             <div></div>\r\n    //         )\r\n    //     }\r\n\r\n    // }\r\n    \r\n\r\n\r\nconst About = (props) => {\r\n    const head = props.leaders.leaders.map((leader)=>{\r\n        return (\r\n            <div key= {leader.id} className= \"col-12 mt-5\">\r\n                <RenderLeader leader= {leader} isLoading ={props.leadersLoading} errMess= {props.leadersErrMess}/>\r\n            </div>\r\n        );\r\n    });\r\n  \r\n                return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>About Us</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <h2>Our History</h2>\r\n                            <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                            <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <Card>\r\n                                <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                                <CardBody>\r\n                                    <dl className=\"row p-1\">\r\n                                        <dt className=\"col-6\">Started</dt>\r\n                                        <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                        <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                        <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                        <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                        <dd className=\"col-6\">$1,250,375</dd>\r\n                                        <dt className=\"col-6\">Employees</dt>\r\n                                        <dd className=\"col-6\">40</dd>\r\n                                    </dl>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <Card>\r\n                                <CardBody className=\"bg-faded\">\r\n                                    <blockquote className=\"blockquote\">\r\n                                        <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                            I'm not hungry enough to eat six.</p>\r\n                                        <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                            P. Pepe, Diversion Books, 2014</cite>\r\n                                        </footer>\r\n                                    </blockquote>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h2>Corporate Leadership</h2>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <Media list>\r\n                                <Stagger in>\r\n                                    {head}\r\n                                </Stagger>\r\n                            </Media>\r\n                            \r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React,{Component} from 'react';\r\nimport {Breadcrumb,BreadcrumbItem, Button,Label,Col,Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport{ Control,Form, Errors} from 'react-redux-form';\r\n\r\nconst required =(val) => val && val.length;\r\nconst maxLength=(len) =>(val) => !(val) ||(val.length <= len);\r\nconst minLength =(len) =>(val) =>(val) &&(val.length >= len);\r\nconst isNumber =(val) => !isNaN(Number(val));\r\nconst validEmail =(val) =>/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        // this.state ={\r\n        //     firstname: '',\r\n        //     lastname: '',\r\n        //     telnum:'',\r\n        //     email:'',\r\n        //     agree:false,\r\n        //     contactType: 'Tel.',\r\n        //     message: '',\r\n        //     touched:{\r\n        //         firstname:false,\r\n        //         lastname:false,\r\n        //         telnum:false,\r\n        //         email:false\r\n        //     }\r\n\r\n        // }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleInputChange =this.handleInputChange.bind(this);\r\n        // this.handleBlur= this.handleBlur.bind(this);\r\n    }\r\n\r\n    // handleInputChange(event){\r\n    //     const target= event.target;\r\n    //     const value=target.type === 'checkbox' ?target.checked : target.value;\r\n    //     const name =target.name;\r\n\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     });\r\n\r\n\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     console.log(\"Current State is:\" + JSON.stringify(this.state));\r\n    //     alert(\"Current State is:\" + JSON.stringify(this.state))\r\n    //     event.preventDefault();\r\n    //     // default submit button function redirect to new page when submitted which can be avoided using eventdefaultprevent.\r\n\r\n    // }\r\n\r\n    // handleBlur =(field)=>(evt) =>{\r\n    //     this.setState({\r\n    //         touched: {...this.state.touched, [field]:true}});\r\n    //     }\r\n\r\n    // validate(firstname,lastname,telnum,email){\r\n    //     const errors ={\r\n    //         firstname: '',\r\n    //         lastname: '',\r\n    //         telnum: '',\r\n    //         email: ''\r\n    //     };\r\n\r\n    //     if(this.state.touched.firstname && firstname.length<3)\r\n    //         errors.firstname ='First Name should be >=3 characters';\r\n    //     else if(this.state.touched.firstname && firstname.length >10)\r\n    //          errors.firstname ='First Name should be <=10 characters';\r\n    \r\n    //     if(this.state.touched.lastname && lastname.length<3)\r\n    //          errors.lastname ='Last Name should be >=3 characters';\r\n    //     else if(this.state.touched.lastname && lastname.length >10)\r\n    //           errors.lastname ='Last Name should be <=10 characters';\r\n    \r\n    //     const reg =/^\\d+$/;\r\n    //         if(this.state.touched.telnum && !reg.test(telnum))\r\n    //             errors.telnum ='Tel. Number should contatin only numbers'\r\n\r\n    //         if(this.state.touched.email && email.split('').filter(x =>x === '@').length !== 1)\r\n    //             errors.email ='Email should contain  @ sign';\r\n\r\n    //         return errors;\r\n    \r\n    //         }\r\n\r\n\r\n    handleSubmit(values){\r\n        console.log('current state is : '+ JSON.stringify(values));\r\n        alert('current state is :' +JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(\r\n            values.firstname,\r\n            values.lastname,\r\n            values.telnum,\r\n            values.email,\r\n            values.agree,\r\n            values.contactType,\r\n            values.message\r\n        );\r\n  \r\n    }\r\n\r\n    render() {\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email)\r\n    return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to ='/Home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className= \"col-12\">\r\n                <h3> Contact Us </h3>\r\n                <hr/>\r\n            </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\" href=\"tel:+123456859\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className =\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3> Send us your Feedback</h3>\r\n                </div>\r\n                <div className =\"col-12 col-md-9\">\r\n                    {/* <Form onSubmit={this.handleSubmit}> */}\r\n                    <Form  model= \"feedback\" onSubmit ={(values)=> this.handleSubmit(values)}>\r\n                        <Row className =\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}> First Name</Label>\r\n                            <Col md={10}>\r\n                                {/* <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    value ={this.state.firstname}\r\n                                    valid={errors.firstname === ''}\r\n                                    invalid ={errors.firstname !== ''}\r\n                                    onBlur ={this.handleBlur('firstname')}\r\n                                    onChange ={this.handleInputChange} />\r\n                                    <FormFeedback>\r\n                                        {errors.firstname}\r\n                                    </FormFeedback> */}\r\n\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                     placeholder=\"First Name\" \r\n                                     className=\"form-control\"\r\n                                     validators ={{\r\n                                         required, minLength: minLength(3), maxLength: maxLength(15)}}\r\n                                         />\r\n\r\n                                         <Errors\r\n                                            className=\"text-danger\"\r\n                                            model =\".firstname\"\r\n                                            show =\"touched\"\r\n                                            messages ={{\r\n                                                required: 'Required ',\r\n                                                minLength : 'Must be greater than 2 characters',\r\n                                                maxLength : 'Must be 15 characters or less'\r\n                                            }}\r\n                                            />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}> Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                   className=\"form-control\"\r\n                                   validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}/>\r\n                                   <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className =\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                    />\r\n                                    {/* <FormFeedback>{errors.telnum}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    \r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}/>\r\n                                    \r\n                                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Col md={{size:6,offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\"./agree\" name=\"agree\"\r\n                                        className=\"form-check-input\"\r\n                                       />{''}\r\n                                        <strong> May we contact you?</strong>\r\n                                    </Label>\r\n                                    </div>\r\n                              \r\n                            </Col>\r\n                            <Col md={{size:3,offset:1}}>\r\n                               <Control.select model=\".contactType\" name=\"contactType\"\r\n                                className=\"form-control\">\r\n                                   <option>Tel.</option>\r\n                                   <option>Email</option>\r\n                                   </Control.select> \r\n                            </Col>\r\n                            </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    row=\"12\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                            </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Col md={{size:10, offset:2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                Send Feedback\r\n                                </Button>\r\n                            </Col>\r\n                            </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            );\r\n            }\r\n            }\r\nexport default Contact;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='./home'>Home</Link></li>\r\n                        <li><Link to='./aboutus'>About Us</Link></li>\r\n                        <li><Link to='./menu'>Menu</Link></li>\r\n                        <li><Link to=\"./contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> \r\n    );\r\n}\r\n\r\nexport default Footer; ","import React from 'react';\r\nimport {Card, CardBody,CardSubtitle,CardTitle,CardImg,CardText} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard ({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n         return(\r\n             <FadeTransform in transformProps ={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'  \r\n             }}>\r\n            <Card>\r\n                <CardImg src ={baseUrl + item.image} alt = {item.name}/>\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n    );\r\n}\r\n\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className =\"container\">\r\n            <div className=\"row align-item-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                        isLoading= {props.dishesLoading}\r\n                        errMess ={props.dishesErrMess}\r\n                        />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading= {props.promoLoading}\r\n                    errMess ={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leaders}\r\n                     isLoading ={props.leadersLoading}\r\n                     errMess ={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED =\"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING =\"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED =\"LEADERS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\n\r\n\r\n\r\n//DISHES_LOADING : dishes are loading or fetching from server\r\n//DISHES_FAILED: dishes are fail to fetch from server\r\n//ADD_DISHES:  dishes are added to store","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\n\r\n//function that creat action for addcomment include all data field in params\r\nexport const addComment = (comment) => ({\r\n    //return plain js object\r\n    //every action function must have type and import strint type here\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload:comment\r\n        // {\r\n        //     //add whatever data you need to send to action object, paramas are assigned to properties.\r\n        //     // dishId : dishId1,\r\n        //     // rating: rating1,\r\n        //     // author: author1,\r\n        //     // comment: comment1\r\n        // }\r\n\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) =>(dispatch)=> {\r\n    const newComment = {\r\n        dishId : dishId,\r\n        rating: rating,\r\n        author:author,\r\n        comment: comment\r\n\r\n    };\r\n    newComment.date = new Date().toISOString ();\r\n    return fetch(baseUrl + 'comments',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers:{\r\n            'content-Type' : 'application/json'\r\n        },\r\n        credentials:'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n\r\n     error => {\r\n       throw error;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post Comments',error.message);\r\n        alert('your comment could not be posted/nError:' + error.message);\r\n    });\r\n    \r\n};\r\n\r\n\r\n\r\n//fetchdishes is thunk\r\nexport const fetchDishes = () =>(dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n//dummy for communicating with server action\r\n    // setTimeout(()=>{\r\n    //      dispatch(addDishes(DISHES));\r\n    // },2000);\r\n\r\n// actual commination with server using baseurl\r\n\r\n return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading =() =>({\r\n    //this function return action \r\n\r\n    type:ActionTypes.DISHES_LOADING\r\n\r\n});\r\n\r\nexport const dishesFailed =(errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload :errmess\r\n});\r\n\r\nexport const addDishes =(dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload:dishes\r\n});\r\n\r\nexport const fetchComments =() => (dispatch) => {\r\n    return fetch(baseUrl +'comments')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n\r\n}\r\n\r\nexport const commentsFailed =(errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload :errmess\r\n});\r\n\r\nexport const addComments =(comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload:comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchleaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading(true));\r\n\r\n   return fetch(baseUrl + 'leaders')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response =>response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n    }\r\n\r\n    export const leadersFailed = (errmess) => ({\r\n        type: ActionTypes.LEADERS_FAILED,\r\n        payload: errmess\r\n    });\r\n\r\n    export const leadersLoading = () => ({\r\n        type : ActionTypes.LEADERS_LOADING\r\n    });\r\n\r\n    export const addLeaders = (leaders) => ({\r\n        type: ActionTypes.ADD_LEADERS,\r\n        payload: leaders\r\n    });\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree,contactType,message) => (dispatch) => {\r\n        const newFeedback ={\r\n            firstname : firstname,\r\n            lastname : lastname,\r\n            telnum : telnum,\r\n            email : email,\r\n            agree : agree,\r\n            contactType : contactType,\r\n            message : message\r\n        };\r\n        newFeedback.date = new Date().toISOString ();\r\n        return fetch(baseUrl + 'feedback', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newFeedback),\r\n            headers : {\r\n                'content-Type' : 'application/json'\r\n            },\r\n            credentials :'same-origin'\r\n        }) \r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ':' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => alert(\"thank you\" + JSON.stringify(response)))\r\n        .catch(error => {console.log('Post Feedback', error.message);\r\n            alert('your Feedback could not be posted on server' + error.message);\r\n    });\r\n    \r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport Menu from \"./MenuComponent\";\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Header from \"./HeaderComponent\";\r\nimport Aboutus from \"./AboutComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport { Switch,Route,Redirect, withRouter } from 'react-router-dom';\r\nimport {connect } from 'react-redux';\r\nimport { postComment,fetchDishes,fetchComments,fetchPromos,fetchleaders, postFeedback} from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\n\r\n  //before connecting to store you need to define \r\n  // we derive all state from redux store\r\n  const mapStateToProps = state =>{\r\n    return{\r\n      dishes:state.dishes,\r\n      comments: state.comments,\r\n      promotions:state.promotions,\r\n      leaders : state.leaders\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = (dispatch) => ({\r\n      postComment: (dishId,rating,author,comment) => dispatch(postComment(dishId,rating,author,comment)),\r\n      fetchDishes:() =>{dispatch(fetchDishes())},\r\n      resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n      fetchComments: () => {dispatch(fetchComments())},\r\n      fetchPromos: () => {dispatch(fetchPromos())},\r\n      fetchleaders: () => {dispatch(fetchleaders())},\r\n      postFeedback : (firstname, lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname, lastname,telnum,email,agree,contactType,message))\r\n    });\r\n\r\n  //dispatch (addcommnet()) recive a updated action object to sent to store.which will update state. this dispatch function will be used\r\n  //as props in below main component\r\n\r\nclass Main extends Component {\r\n \r\n\r\n//when component mounted than component didmount will called and fetchdishes function\r\n//called and it will direct to mapdispatchtoprops function and then\r\n//it will go to redux store loading and then its get ready to view in main component\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchleaders();\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const HomePage =() => {\r\n      return(\r\n        <Home\r\n          dish ={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n          dishesLoading ={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion ={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leaders = {this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}\r\n          leadersLoading ={this.props.leaders.isLoading}\r\n          leadersErrMess = {this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const  DishWithId =({match}) =>{\r\n      return(\r\n        // match with params with disid which is string will convert into int using part int and usign base 10 format and filter will recive array so we nned to extract first element of array using [0]\r\n        <Dishdetail dish={this.props.dishes.dishes.filter((dish)=>dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading= {this.props.dishes.isLoading}\r\n          errMess = {this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment)=>comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          // addComment ={this.props.addComment}\r\n          postComment={this.props.postComment}\r\n          />\r\n\r\n        );\r\n      \r\n    };\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <div>\r\n        <TransitionGroup>\r\n          <CSSTransition key= {this.props.location.key} classNames = \"page\" timeout ={300}>\r\n              <Switch>\r\n                <Route path= '/home' component={HomePage}/>\r\n                {/* inline arraw function like menu dishes can also define as const homepage. both are same */}\r\n                <Route exact path=\"/menu\" component={()=> <Menu dishes= {this.props.dishes}/>} />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n                {/* redirect element mean if exact path will not match then application will reidrect to home page */}\r\n                  <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm} postFeedback = {this.props.postFeedback}/>}/>\r\n                  <Route path=\"/aboutus\" component ={()=> < Aboutus leaders ={this.props.leaders}/>}/>\r\n                <Redirect to =\"/home\"/> \r\n              </Switch>\r\n              </CSSTransition>\r\n      </TransitionGroup>\r\n      </div>\r\n  \r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n// this export line(73) will help to connect main component with redux","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\n\r\n//below is default implementation of dishes reducer function and return default initial state\r\nexport const Dishes =(state = {\r\nisLoading : true, errMess: null, dishes: [] \r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return{...state,isLoading:false, errMess:null,dishes:action.payload};\r\n\r\n\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return{...state,isLoading:true, errMess:null,dishes:[]};\r\n        \r\n        \r\n        case ActionTypes.DISHES_FAILED:\r\n            return{...state,isLoading:false, errMess:action.payload ,dishes:[]};\r\n\r\n    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\n\r\n//it recieve action type here and suppose to act\r\nexport const Comments =(state = { errMess :null, comments :[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess:null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            //state.length is js array and assign id\r\n            // comment.id = state.length;\r\n            // comment.date = new Date().toISOString();\r\n            return {...state, comments:state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n// import {PROMOTIONS} from '../shared/promotions';\r\n\r\nexport const Promotions =(state = {isLoading :true, errMess:null,promotions:[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n            case ActionTypes.PROMOS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, promotions: []}\r\n    \r\n            case ActionTypes.PROMOS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n       \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","//import {LEADERS} from \"../shared/leaders\";\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders =(state = {isLoading : true, errMess:null, leaders :[]}, action) => {\r\n    \r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state, isLoading:false, errMess: null, leaders:action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{ ...state, isLoading:true, errMess: null, leaders:[]};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return{...state, isLoading:false, errMess:action.payload, leaders:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree:false,\r\n    contactType : 'Tel.',\r\n    message: ''\r\n\r\n};","import React, {Component} from 'react';\nimport Main from \"./components/MainComponent\";\nimport {BrowserRouter} from 'react-router-dom';\nimport \"./App.css\";\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n \n render(){\n  return (\n    <Provider store={store}>\n    <BrowserRouter>\n    <div>\n     <Main/>\n    </div>\n    </BrowserRouter>\n    </Provider>\n  );\n\n}\n}\n\n\nexport default App;\n\n\n//provider  is allow to access of store into whole react application","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms} from 'react-redux-form';\r\nimport {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {InitialFeedback} from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store =createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger) \r\n        //these two are enhancer of createstore takes as second parameter\r\n    );\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}