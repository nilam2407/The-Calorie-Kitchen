{"version":3,"sources":["components/LoadingComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","RenderMenuItem","dish","onClick","src","image","alt","name","href","price","description","Menu","props","menu","dishes","map","id","isLoading","errMess","data-aos","data-aos-delay","data-filter","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","comment","console","log","JSON","stringify","alert","color","isOpen","toggle","onSubmit","md","htmlFor","select","model","text","placeholder","validators","minLength","show","messages","textarea","row","type","Component","RenderDish","in","transformProps","exitTransform","width","RenderComments","comments","list","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","disId","Dishdetail","to","active","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","navbar","innerRef","input","check","RenderLeader","leader","designation","About","head","leaders","leadersLoading","leadersErrMess","validEmail","test","Contact","sucessMsg","resetFeedbackForm","postFeedback","email","subject","message","style","border","height","frameBorder","allowFullScreen","class","Footer","aria-hidden","isNumber","isNaN","Number","fixLength","RenderCard","item","Home","lg","loop","items","autoplay","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","FEEDBACK","baseUrl","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","feedback","Main","fetchDishes","fetchComments","fetchPromos","fetchleaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","success","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bece17ec.chunk.js","sourcesContent":["import React from'react';\r\n\r\nexport const Loading =() =>{\r\n    return(\r\n        //loading spinner to user get to know that dishes are loading\r\n        <div className=\"col-12\">\r\n            <span className= \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading ...</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Card, CardImg, CardImgOverlay,  CardTitle,Breadcrumb,BreadcrumbItem } from 'reactstrap';\r\nimport {Loading } from './LoadingComponent';\r\nimport \"./menu.css\";\r\n\r\nfunction RenderMenuItem ({dish, onClick}){\r\n    return(\r\n\r\n            <div className=\"menu-item\">\r\n                <div className=\"menu-img\">\r\n                <img src= {dish.image} alt={dish.name}/>\r\n                </div>\r\n                <div className=\"menu-content\">\r\n                    <a href=\"#\">{dish.name}</a><span>{dish.price}</span>\r\n                </div>\r\n                <div className=\"menu-ingredients\">\r\n                    {dish.description}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        // <Card>\r\n        //     {/*  onClick ={()=> onClick(dish.id)} */}\r\n        //     <Link to= {`/menu/${dish.id}`}> \r\n        //     {/* link only accepet url so to turn js in url u need to use special backdirection qutoation */}\r\n        //     <CardImg width=\"100%\" src = {dish.image} alt={dish.name}/>\r\n        //         <CardImgOverlay>\r\n        //         <CardTitle>{dish.name}</CardTitle>\r\n        //         </CardImgOverlay>\r\n        //     </Link>\r\n        // </Card>\r\n    );\r\n}\r\n\r\n//function component can also create as below\r\n\r\nconst Menu = (props) =>{\r\n    const menu= props.dishes.dishes.map((dish)=>{\r\n        return(\r\n            \r\n            <div className=\"col-12\" key ={dish.id}>\r\n               <RenderMenuItem dish = {dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if(props.dishes.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dishes.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    else\r\n        return(\r\n            <div className=\"menu section-bg\">\r\n            <div className =\"container\">\r\n                <div className=\"row mt-3\">\r\n                    {/* <Breadcrumb>\r\n                        <BreadcrumbItem><Link to ='/Home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb> */}\r\n                    <div className= \"section-title\">\r\n                    <p>Check Our Tasty Menu</p>\r\n                    <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                    <div className=\"col-lg-12 d-flex justify-content-center\">\r\n                        <ul id=\"menu-flters\">\r\n                        <li data-filter=\"*\" className=\"filter-active\">All</li>\r\n                        <li data-filter=\".filter-starters\">Starters</li>\r\n                        <li data-filter=\".filter-salads\">Salads</li>\r\n                        <li data-filter=\".filter-specialty\">Specialty</li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                <div className=\"row menu-container mb-5\">\r\n                        {menu}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n        );\r\n}\r\n\r\nexport default Menu;","import React,{Component}  from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle,Breadcrumb,BreadcrumbItem, Button,Modal,ModalHeader,ModalBody,Row,Label,Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport{ Control,LocalForm, Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\nconst required =(val) => val && val.length;\r\nconst maxLength=(len) =>(val) => !(val) ||(val.length <= len);\r\nconst minLength =(len) =>(val) =>(val) &&(val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen : false\r\n        }\r\n\r\n        this.toggleModal= this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      \r\n    \r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({isModalOpen:!this.state.isModalOpen})}\r\n    \r\n\r\n            handleSubmit(values){\r\n                this.props.postComment(this.props.dishId, values.rating,values.name,values.comment);\r\n                console.log('current state is : '+ JSON.stringify(values));\r\n                alert('current state is :' +JSON.stringify(values));\r\n            }\r\n\r\n    render(){\r\n    return(\r\n        <div>\r\n        <Button  color=\"light\" onClick = {this.toggleModal}> \r\n        <span className =\"fa fa-edit fa-lg\"></span>\r\n             Submit Comment</Button>\r\n        <Modal isOpen ={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle ={this.toggleModal}>\r\n                    Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                  <LocalForm onSubmit ={(values) => this.handleSubmit(values)}>\r\n                      <Row className =\"form-group\">\r\n                          <Col md={10}>\r\n                          <Label htmlFor=\"rating\"> Rating </Label>\r\n                          <Control.select model=\".rating\" name=\"rating\"\r\n                          className=\"form-control\">\r\n                              <option>1</option>\r\n                              <option>2</option>\r\n                              <option>3</option>\r\n                              <option>4</option>\r\n                              <option>5</option>\r\n                          </Control.select>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                      <Col md={10}>\r\n                          <Label htmlFor=\"name\"> Your Name </Label> \r\n                         \r\n                          <Control.text model=\".name\"  id=\"name\" name=\"name\"\r\n                          placeholder=\"Your Name\"\r\n                          className =\"form-control\"\r\n                          validators ={{\r\n                              required,minLength: minLength(3), maxLength : maxLength(15)}}/>\r\n\r\n                              <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".name\"\r\n                                    show=\"touched\"\r\n                                    messages ={{\r\n                                        required :'Required',\r\n                                        minLength :' Must be greater than 2 characters',\r\n                                        maxLength : 'Must be 15 characters or less'\r\n\r\n                                    }}\r\n                                    />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className =\"form-group\">\r\n                      <Col md={10}>\r\n                          <Label htmlFor=\"comment\"> Comment</Label>\r\n                          <Control.textarea model= \".comment\" id=\"comment\" name=\"comment\"\r\n                          row=\"6\"\r\n                          className=\"form-control\"/>\r\n                          </Col>\r\n                      </Row>\r\n                \r\n                      <Row className=\"form-group\">\r\n                          <Col md={4} >\r\n                          <Button type =\"submit\" color=\"primary\">\r\n                             \r\n                              Submit\r\n                          </Button>\r\n                          </Col>\r\n                      </Row>\r\n                      </LocalForm>  \r\n                    \r\n                </ModalBody>\r\n\r\n\r\n            </Modal>\r\n       \r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n    if(dish != null)\r\n    return(\r\n        <FadeTransform in transformProps ={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'  \r\n}}>\r\n         <Card>\r\n             <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n             <CardBody>\r\n             <CardTitle>\r\n                 {dish.name}\r\n             </CardTitle>\r\n             <CardText>\r\n                 {dish.description}\r\n             </CardText>\r\n             </CardBody>\r\n         </Card>\r\n         </FadeTransform>\r\n    );\r\n\r\nelse \r\n    return(\r\n        <div></div>\r\n        );    \r\n\r\n}\r\n \r\n\r\n function RenderComments({comments,postComment,dishId}) {\r\n   \r\n    if (comments != null) {\r\n        \r\n        let list = comments.map((comments)=>{\r\n\r\n            return(\r\n                <Fade in>\r\n                <li key={comments.id} >\r\n                    <div>\r\n                        <p>{comments.comment}</p>\r\n                        <p>--{comments.author},\r\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}</p>\r\n                    </div>\r\n                    </li>\r\n                </Fade>\r\n            )\r\n        })\r\n   \r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                    {list}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm disId={dishId} postComment = {postComment}/>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    \r\n//     if(comment != null) {\r\n//         const cmnts = comment.map((comment) => {\r\n//             return (\r\n//                 <ul key={comment.id} className=\"list-unstyled\">\r\n//                     <li>\r\n//                         <p> {comment.comment} </p>\r\n//                         <p> -- {comment.author},\r\n//                             &nbsp;\r\n//                             {new Intl.DateTimeFormat('en-US', {\r\n//                                 year: 'numeric',\r\n//                                 month: 'short',\r\n//                                 day: '2-digit'\r\n//                             }).format(new Date(Date.parse(comment.date)))}\r\n//                         </p>\r\n//                     </li>\r\n//                 </ul>\r\n                \r\n//             )\r\n//         })\r\n\r\n//         return (\r\n//             <div className=\"col-12 col-md-5 m-1\">\r\n//                 <h4> Comments </h4>\r\n//                 {cmnts}\r\n//             </div>\r\n//         )\r\n//      }  \r\n       \r\n//      else {\r\n//         return (\r\n//             <div></div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst Dishdetail = (props) =>{\r\n\r\n        if(props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n      else  if(props.dish != null){\r\n             return(\r\n        <div className =\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to ='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className= \"col-12\">\r\n                <h3> {props.dish.name}</h3>\r\n                <hr/>\r\n            </div>\r\n            </div>\r\n        <div className=\"row\">\r\n            <div className = \"col-12 col-md-5 m-1\">\r\n            <RenderDish dish ={props.dish}/>\r\n            </div>\r\n            <div className =\"col-12 col-md m-1\">\r\n                <RenderComments comments ={props.comments}\r\n                postComment ={props.postComment}\r\n                dishId ={props.dish.id}\r\n                //dish id needed to add id to state\r\n                />\r\n            </div>\r\n           \r\n            \r\n             </div>\r\n             \r\n        </div>\r\n        \r\n\r\n    ); }\r\n\r\n    else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}        \r\n\r\n\r\nexport default Dishdetail;","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand,Nav, NavbarToggler, Collapse, NavItem,Modal,ModalBody,Button,ModalHeader,Form,FormGroup,Label,Input} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport \"./header.css\";\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            isNavOpen:false,\r\n            isModalOpen:false\r\n        }\r\n        //if we bind this we can use  in jsx as this.toggleNav method instead of using arrow function inside jsx.\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal= this.toggleModal.bind(this);\r\n        this.handleLogin= this.handleLogin.bind(this);\r\n    }\r\n\r\n\r\n    toggleModal(){\r\n        this.setState({isModalOpen:!this.state.isModalOpen})\r\n\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username:\" + this.username.value + \"password: \" + this.password.value +\"Remember: \"+ this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({isNavOpen :!this.state.isNavOpen})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            //react fragment will allow bunch of react element together its also alternate of div element\r\n            <React.Fragment>\r\n                {/* navabar will expand for md or larger screen */}\r\n\r\n            <Navbar  dark expand=\"md fixed-top\">\r\n                <div className= \"container\">\r\n                    <NavbarToggler  className= \"ml-auto\" onClick={this.toggleNav}/>\r\n                    <NavbarBrand className = \"mr-auto logo\" href='/'> The Calorie Kitchen\r\n                        {/* <img src= \"assets/images/logo.png\"   height=\"70\" width=\"81\" \r\n                        alt=\"Ristorate Con Fusion\"/> */}\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav className= \"ml-auto\" navbar>\r\n                        <NavItem className=\"ulelement\">\r\n                            <NavLink className=\"link\" to=\"/home\"> Home </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"ulelement\">\r\n                            <NavLink className=\"link\" to=\"/aboutus\"> About Us </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"ulelement\">\r\n                            <NavLink className=\"link\" to=\"/menu\"> Menu </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"ulelement\">\r\n                            <NavLink className=\"link\" to=\"/Contactus\"> Contact Us </NavLink>\r\n                        </NavItem>\r\n                     \r\n                        <NavItem className=\"ulelement\">\r\n                            <NavLink className=\"link last\" to=\"/Order\"> Order </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"book-a-table\">\r\n                            <a className=\"btnhover\" href=\"/home/#reserve\"> BOOK A TABLE </a>\r\n                            {/* <Button type=\"submit\" className=\"btnhover\"> BOOK A TABLE </Button> */}\r\n                        </NavItem>\r\n                    </Nav>\r\n                    {/* <Nav className=\"ml-auto\" navbar\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                            </Button>\r\n                        </NavItem>\r\n                        \r\n                    </Nav> */}\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n        \r\n            \r\n            {/* <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className= \"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Oue lipsmacking creations will tickle your culinery senses</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron> */}\r\n            <Modal isOpen ={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle ={ this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\"> Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                             innerRef={(input) => this.username =input}/>\r\n                           \r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\"> Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                             innerRef={(input) => this.password =input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                 innerRef={(input) => this.remember =input}/> Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type =\"submit\" value=\"submit\" className=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {Fade, Stagger} from 'react-animation-components';\r\nimport Header from \"./HeaderComponent\";\r\nimport \"./about.css\";\r\n\r\n\r\nfunction RenderLeader ({leader, isLoading, errMess}) {\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n            return (\r\n                // <Fade in>\r\n                //   <Media tag=\"li\">\r\n                //     <Media left middle>\r\n                //         <Media object src={leader.image} alt={leader.name}  className =\"media-img\"/>\r\n                //     </Media>\r\n                //     <Media body className=\"ml-5\">\r\n                //       <Media heading>{leader.name}</Media>\r\n                //       <Media subheading> {leader.designation} </Media>\r\n                //       <p className =\"mt-2\">{leader.description}</p>\r\n                //     </Media>\r\n                //   </Media>\r\n                //   </Fade>\r\n                \r\n                <Fade in>\r\n                       \r\n                        <div className=\"member\" data-aos=\"zoom-in\" data-aos-delay=\"300\">\r\n                        <img src= {leader.image} className=\"img-fluid\" alt=\"\"/>\r\n                        <div className=\"member-info\">\r\n                            <div className=\"member-info-content\">\r\n                            <h4>{leader.name}</h4>\r\n                            <span>{leader.designation}</span>\r\n                            </div>\r\n                            <div className=\"social\">\r\n                            <a href=\"\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a href=\"\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a href=\"\"><i className=\"fa fa-instagram\"></i></a>\r\n                            <a href=\"\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    \r\n                </Fade>\r\n\r\n\r\n              );\r\n        }\r\n    }\r\n\r\n    //     return(\r\n    //         <div className=\"col-12  m-1\">\r\n    //         <Stagger in>\r\n    //         {head}   \r\n    //         </Stagger>\r\n    //         </div>\r\n    //         )\r\n    //     }\r\n    //     else{\r\n    //         return(\r\n    //             <div></div>\r\n    //         )\r\n    //     }\r\n\r\n    // }\r\n    \r\n\r\n\r\nconst About = (props) => {\r\n    const head = props.leaders.leaders.map((leader)=>{\r\n        return (\r\n            <div className =\"col-12 col-md-4\"   key= {leader.id}>\r\n                <RenderLeader leader= {leader} isLoading ={props.leadersLoading} errMess= {props.leadersErrMess}/>\r\n            </div>\r\n        );\r\n    });\r\n  \r\n                return(\r\n     \r\n                <div className=\"about\">\r\n                    <div className=\"container\">\r\n                   \r\n                    <div className=\"row\">\r\n                        {/* <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                        </Breadcrumb> */}\r\n                        <div className=\"col-lg-6 order-1 order-lg-2\">\r\n                            <div className=\"about-img\">\r\n                                <img src= \"https://4.bp.blogspot.com/-3FxR5HiioAU/Uk-xkmwlCXI/AAAAAAAAAgs/HRKybYRgzdE/s1600/Bar-and-Restaurant-Interior-Designs.jpg\"\r\n                                    alt=\"Resturant Image\">\r\n                                </img>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 pt-4 pt-lg-0 order-2 order-lg-1 content\">\r\n\r\n                            <h2>About Us</h2>\r\n                            <hr />\r\n                            <h4>Our History</h4>\r\n                            <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                            <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                        </div> \r\n                        </div>\r\n                        \r\n                    <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    <div className=\"section-title\">\r\n                            <h2>chefs</h2>\r\n                            <p> Our professional Chefs</p>\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                            {head}\r\n                            \r\n                        </div>\r\n                       \r\n                    \r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n              \r\n                \r\n    );\r\n}\r\n\r\nexport default About;    ","import React,{Component} from 'react';\r\nimport {Breadcrumb,BreadcrumbItem, Button,Label,Col,Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport{ Control,Form, Errors} from 'react-redux-form';\r\nimport \"./contact.css\";\r\n\r\nconst required =(val) => val && val.length;\r\nconst maxLength=(len) =>(val) => !(val) ||(val.length <= len);\r\nconst minLength =(len) =>(val) =>(val) &&(val.length >= len);\r\nconst isNumber =(val) => !isNaN(Number(val));\r\nconst validEmail =(val) =>/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nfunction successmsg (values) {\r\n\r\n    if(values){\r\n        <div> \r\n            <p> successful</p>\r\n        </div>\r\n    \r\n    }\r\n    else {\r\n        <div> failed</div>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.sucessMsg =this.sucessMsg.bind(this);\r\n    }\r\n\r\n    sucessMsg () {\r\n       <div>\r\n           <p> Successful</p>\r\n       </div>\r\n\r\n    }\r\n     \r\n\r\n\r\n\r\n    handleSubmit(values){\r\n        // console.log('current state is : '+ JSON.stringify(values));\r\n        // alert('current state is :' +JSON.stringify(values));\r\n        alert(\"thank you for submission\");\r\n        <div className=\"row\">\r\n            <p> thanks</p>\r\n        </div>\r\n    \r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(\r\n            values.name,\r\n            values.email,\r\n            values.subject,\r\n            values.message\r\n        );\r\n  \r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n    \r\n        \r\n   \r\n        return(\r\n\r\n        <div className=\"contact\">        \r\n            <div className=\"container mb-3\">\r\n                <div className=\"section-title\">\r\n                     <p> Contact Us</p>\r\n\r\n                </div>\r\n                <div className=\"col-12 text-center\">\r\n                <iframe \r\n                       src=\"https://www.bing.com/maps/embed?h=350&w=800&cp=42.314578608773466~-83.05123804924315&lvl=16&typ=d&sty=r&src=SHELL&FORM=MBEDV8\"\r\n                        style={{border:0}}\r\n                        width= \"100%\"\r\n                        height=\"350\"\r\n                        frameBorder=\"0\"\r\n                        allowFullScreen=\"\"\r\n                         />\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-lg-4 info\">\r\n                            <div className=\"address\">\r\n                                <i class=\"fa fa-map-marker\"></i>\r\n                                <h4>Location</h4>\r\n                                <p> 121, Main Street,Windsor, Ontario </p>\r\n                            </div>\r\n\r\n                            <div className=\"open-hours\">\r\n                                <i className=\"fa fa-clock-o\"></i>\r\n                                <h4> Open Hours</h4>\r\n                                <p> Monday-Saturday :<br /> \r\n                                    11:00 AM - 23:00 PM</p>\r\n                            </div>\r\n\r\n                            <div className=\"email\">\r\n                                <i className=\"fa fa-envelope\"></i>\r\n                                <h4> Email:</h4>\r\n                                <p>nilam2407@gmail.com</p>\r\n                            </div>\r\n\r\n                            <div className=\"phone\">\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                <h4>Call:</h4>\r\n                                <p> +1 519 123 4567</p>\r\n                            </div>\r\n\r\n                </div>\r\n             \r\n                <div className=\"col-lg-8 mt-5 mt-lg-0\">\r\n                    <div className=\"email-form\">\r\n        \r\n                    <Form  model= \"feedback\" onSubmit ={(values)=> this.handleSubmit(values)}>\r\n\r\n                        <Row className =\"form-group\">\r\n                            <Col  md={6}>\r\n                                <Control.text model= \".name\" id =\"name\" name=\"name\"\r\n                                placeholder=\"Your Name\"\r\n                                className= \"form-control\"\r\n                                validators= {{\r\n                                    required, minLength: minLength(3)}}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model =\".name\"\r\n                                    show= \"touched\"\r\n                                    messages = {{\r\n                                        required:'Required, ',\r\n                                        minLength: 'Name must be greater than 2 characters',\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"your Email\"\r\n                                    className=\"form-control\"\r\n                                    \r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}/>\r\n                                    \r\n                                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                            </Col>\r\n                         </Row>\r\n                         <Row className =\"form-group\">\r\n                            <Col md={12}>\r\n                                <Control.text model=\".subject\" id=\"subject\" name=\"subject\"\r\n                                placeholder=\"subject\"\r\n                                    row=\"1\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className =\"form-group\">\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                placeholder=\"Message\"\r\n                                    row=\"12\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className =\"form-group\">\r\n                            <Col className=\"text-center btn-book\">\r\n                                <Button type=\"submit\" >\r\n                                Send Message\r\n                                </Button>\r\n                            </Col>\r\n\r\n                            </Row>\r\n                           \r\n                        \r\n                            </Form>\r\n\r\n\r\n\r\n\r\n                            \r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            );\r\n            }\r\n            }\r\nexport default Contact;\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./footer.css\";\r\n\r\nfunction Footer(props){\r\n    return(\r\n       \r\n        <div className=\"footer\">\r\n        <div className =\"footer-top\">\r\n        <div className=\"container\">\r\n        \r\n            <div className=\"row mt-0 justify-content-center\">             \r\n                <div className=\"col-3 offset-1 footer-links\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><Link to='./home'>Home</Link></li>\r\n                        <li><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><Link to='./aboutus'>About Us</Link></li>\r\n                        <li><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><Link to='./menu'>Menu</Link></li>\r\n                        <li><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><Link to=\"./contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-4  footer-info\">\r\n                    <h5>ADDRESS</h5>\r\n                    <p>\r\n\t\t              121, Main Street<br />\r\n\t\t              Windsor, Ontario <br />\r\n\t\t              CANADA<br /><br/>\r\n\t\t              <strong>Phone </strong>: +519 1234 5678<br />\r\n\t\t              <strong>Email</strong>: <a href=\"mailto:nilam2407@gmail.com\"> nilam2407@gmail.com</a>\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-3  align-self-center social-links\">\r\n                    <div className=\"text-center\">\r\n                        <p> Connect with Us</p>\r\n                        \r\n                        <a href=\"https://www.facebook.com/login.php\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a href=\"http://instagram.com/\"><i className=\"fa fa-instagram\"></i></a>\r\n                        <a href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2021 NeelRitz Inc</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div> \r\n    );\r\n}\r\n\r\nexport default Footer; ","import React, { Component } from 'react';\r\nimport {Card, CardBody,CardSubtitle,CardTitle,CardImg,CardText, Media, Carousel,Col,Row,Button} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport{ Control,Form, Errors} from 'react-redux-form';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nimport \"./Home.css\";\r\nimport menu from \"./MenuComponent\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst required =(val) => val && val.length;\r\nconst minLength =(len) =>(val) =>(val) &&(val.length >= len);\r\nconst isNumber =(val) => !isNaN(Number(val));\r\nconst validEmail =(val) =>/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst maxLength=(len) =>(val) => !(val) ||(val.length <= len);\r\nconst fixLength =(len) =>(val) => !(val) || (val.length == len);\r\n\r\n\r\n\r\n\r\n// function ReserveTable () {\r\n//     return(\r\n            \r\n//     );\r\n// }\r\n\r\n\r\n\r\nfunction RenderCard ({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n         return(\r\n             \r\n             <div className=\"container\">\r\n                 <FadeTransform in transformProps ={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'  \r\n             }}>\r\n               \r\n                     <div className=\"row event-item\">\r\n                         <div className=\"col-lg-6\">\r\n                             <img src = {item.image} alt ={item.name} className=\"img-fluid\">\r\n                             </img>\r\n                         </div>\r\n                         <div className=\"col-lg-6 pt-4 pt-lg-0 content\">\r\n                             <h3>{item.name}</h3>\r\n                             <div className =\"price\">\r\n                                 <p>{item.designation ? <span>{item.designation}</span> : null }</p>\r\n                             </div>\r\n                             <p className=\"font-italic\">\r\n                                 {item.description}\r\n                             </p>\r\n                         </div>\r\n                         </div>\r\n                 \r\n                    \r\n                         </FadeTransform>\r\n            </div>\r\n             \r\n            // {/* <Card>\r\n            //     <CardImg src ={item.image} alt = {item.name}/>\r\n            //     <CardBody>\r\n            //         <CardTitle>{item.name}</CardTitle>\r\n            //         {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            //         <CardText>{item.description}</CardText>\r\n            //     </CardBody>\r\n            // </Card> */}\r\n\r\n\r\n    \r\n                \r\n        \r\n            \r\n    );\r\n}\r\n\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n   \r\n   \r\n    }\r\n\r\n    \r\nhandleSubmit(values){\r\n    console.log('current state is : '+ JSON.stringify(values));\r\n    alert('current state is :' +JSON.stringify(values));\r\n    // this.props.resetFeedbackForm();\r\n    // this.props.postFeedback(\r\n    //     values.firstname,\r\n    //     values.lastname,\r\n    //     values.telnum,\r\n    //     values.email,\r\n    //     values.agree,\r\n    //     values.contactType,\r\n    //     values.message\r\n    // );\r\n\r\n}\r\n\r\n    \r\n    render(){\r\n\r\n\r\n    return(\r\n        <div>\r\n     \r\n    \r\n        <div className=\"Hero d-flex align-items-center\">\r\n            <div className=\"container position-relative text-center text-lg-left\">\r\n                <Row>\r\n                    <Col lg={8}>\r\n                        <h1>The <span>Calorie</span> Kitchen</h1>\r\n                        <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Oue lipsmacking creations will tickle your culinery senses</p>\r\n                        <div className=\"btns\">\r\n                            <Link to=\"/menu\" className=\"btn-menu animated fadeInUp scrollto\">Our Menu</Link>\r\n                            <a href=\"#reserve\" className=\"btn-book animated fadeInUp scrollto\">Book a Table</a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n        <div className =\"events\">\r\n        <div className =\"container\">\r\n        <div className=\"section-title\">\r\n                     <h2>Special Features </h2>\r\n                 </div>\r\n         <OwlCarousel className=\"events-carousel\"  loop  items={1} autoplay={true} >\r\n                \r\n                    <RenderCard item={this.props.dish}\r\n                        isLoading= {this.props.dishesLoading}\r\n                        errMess ={this.props.dishesErrMess}\r\n                        />\r\n               \r\n                \r\n                    <RenderCard item={this.props.promotion}\r\n                    isLoading= {this.props.promoLoading}\r\n                    errMess ={this.props.promoErrMess}\r\n                    />\r\n                \r\n                \r\n                    <RenderCard item={this.props.leaders}\r\n                     isLoading ={this.props.leadersLoading}\r\n                     errMess ={this.props.leadersErrMess}\r\n                    />\r\n                    \r\n                </OwlCarousel>\r\n                </div>\r\n            </div>\r\n            <div className=\"bookTable\" id=\"reserve\">\r\n                <div className=\"container\">\r\n                    <div className=\"section-title\">\r\n                        <h2>Reservation</h2>\r\n                        <p>Book a Table</p>\r\n                    </div>\r\n                    <Form model=\"reservation\" onSubmit = {(values) => this.handleSubmit(values)} className=\"php-email-form\">\r\n                        <Row className =\"form-group\">\r\n                            <Col lg={4} md={6}>\r\n                                <Control.text model= \".name\" id =\"name\" name=\"name\"\r\n                                placeholder=\"Your Name\"\r\n                                className= \"form-control\"\r\n                                validators= {{\r\n                                    required, minLength: minLength(3)}}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model =\".name\"\r\n                                    show= \"touched\"\r\n                                    messages = {{\r\n                                        required:'Required, ',\r\n                                        minLength: 'Name must be greater than 2 characters',\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6} lg={4}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\" your Email\"\r\n                                    className=\"form-control\"\r\n                                    \r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}/>\r\n                                    \r\n                                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                            </Col>\r\n                            <Col md={6} lg={4}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Your Phone\"\r\n                                    className =\"form-control\"\r\n                                    validators={{\r\n                                        required, fixLength: fixLength(11), isNumber\r\n                                    }}\r\n                                    />\r\n                                    {/* <FormFeedback>{errors.telnum}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            fixLength: 'Phone number must be 10 digits' ,\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                        <Col md={6} lg={4}>\r\n                                <Control type =\"date\" model=\".date\" name=\"date\"\r\n                                placeholder=\"Date\"\r\n                                className=\"form-control\">\r\n\r\n                                </Control>\r\n                            </Col>\r\n                            <Col md={6} lg={4}>\r\n                                <Control.text model=\".time\" id=\"time\" name=\"time\"\r\n                                    placeholder=\"Time\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                </Col>\r\n                        \r\n                        <Col md={6} lg={4}>\r\n                               <Control.select model=\".numPerson\" name=\"numPerson\"\r\n                                className=\"form-control\">\r\n                                   <option>1</option>\r\n                                   <option>2</option>\r\n                                   <option>3</option>\r\n                                   <option>4</option>\r\n                                   <option>5</option>\r\n                                   <option>5 & up</option>\r\n                                   </Control.select> \r\n                            </Col>\r\n                        \r\n                        </Row>\r\n                        <Row className =\"form-group\">\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                placeholder=\"Message\"\r\n                                    row=\"12\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className =\"form-group\">\r\n                            <Col className=\"text-center btn-book\">\r\n                                <Button type=\"submit\">\r\n                                Book a Table\r\n                                </Button>\r\n                            </Col>\r\n                            </Row>\r\n                    </Form>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n       </div>\r\n    );\r\n}\r\n}\r\nexport default Home;","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED =\"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING =\"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED =\"LEADERS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const  FEEDBACK =\"FEEDBACK\";\r\n\r\n\r\n\r\n//DISHES_LOADING : dishes are loading or fetching from server\r\n//DISHES_FAILED: dishes are fail to fetch from server\r\n//ADD_DISHES:  dishes are added to store","export const baseUrl = \"https://my-json-server.typicode.com/nilam2407/confusion-database/\";\r\n\r\n\r\n//http://localhost:3001/\r\n\r\n//https://my-json-server.typicode.com/nilam2407/confusion-database/","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\n\r\n//function that creat action for addcomment include all data field in params\r\nexport const addComment = (comment) => ({\r\n    //return plain js object\r\n    //every action function must have type and import strint type here\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload:comment\r\n        // {\r\n        //     //add whatever data you need to send to action object, paramas are assigned to properties.\r\n        //     // dishId : dishId1,\r\n        //     // rating: rating1,\r\n        //     // author: author1,\r\n        //     // comment: comment1\r\n        // }\r\n\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) =>(dispatch)=> {\r\n    const newComment = {\r\n        dishId : dishId,\r\n        rating: rating,\r\n        author:author,\r\n        comment: comment\r\n\r\n    };\r\n    newComment.date = new Date().toISOString ();\r\n    return fetch(baseUrl + 'comments',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers:{\r\n            'content-Type' : 'application/json'\r\n        },\r\n        credentials:'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n\r\n     error => {\r\n       throw error;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post Comments',error.message);\r\n        alert('your comment could not be posted/nError:' + error.message);\r\n    });\r\n    \r\n};\r\n\r\n\r\n\r\n//fetchdishes is thunk\r\nexport const fetchDishes = () =>(dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n//dummy for communicating with server action\r\n    // setTimeout(()=>{\r\n    //      dispatch(addDishes(DISHES));\r\n    // },2000);\r\n\r\n// actual commination with server using baseurl\r\n\r\n return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading =() =>({\r\n    //this function return action \r\n\r\n    type:ActionTypes.DISHES_LOADING\r\n\r\n});\r\n\r\nexport const dishesFailed =(errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload :errmess\r\n});\r\n\r\nexport const addDishes =(dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload:dishes\r\n});\r\n\r\nexport const fetchComments =() => (dispatch) => {\r\n    return fetch(baseUrl +'comments')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n\r\n}\r\n\r\nexport const commentsFailed =(errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload :errmess\r\n});\r\n\r\nexport const addComments =(comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload:comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchleaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading(true));\r\n\r\n   return fetch(baseUrl + 'leaders')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error' + response.status + ':' + response.statusText);\r\n            error.response = response;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response =>response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n    }\r\n\r\n    export const leadersFailed = (errmess) => ({\r\n        type: ActionTypes.LEADERS_FAILED,\r\n        payload: errmess\r\n    });\r\n\r\n    export const leadersLoading = () => ({\r\n        type : ActionTypes.LEADERS_LOADING\r\n    });\r\n\r\n    export const addLeaders = (leaders) => ({\r\n        type: ActionTypes.ADD_LEADERS,\r\n        payload: leaders\r\n    });\r\n\r\n\r\nexport const postFeedback = (name, email, subject, message) => (dispatch) => {\r\n        const newFeedback ={\r\n            name : name,\r\n            email : email,\r\n            subject :subject,\r\n            message : message\r\n        };\r\n        newFeedback.date = new Date().toISOString ();\r\n        return fetch(baseUrl + 'feedback', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newFeedback),\r\n            headers : {\r\n                'content-Type' : 'application/json'\r\n            },\r\n            credentials :'same-origin'\r\n        }) \r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ':' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(feedback(response)))\r\n        .catch(error => {console.log('Post Feedback', error.message);\r\n            alert('your Feedback could not be posted on server' + error.message);\r\n    });\r\n    \r\n};\r\n\r\nexport const feedback =(feedback) => ({\r\n    type: ActionTypes.FEEDBACK,\r\n    payload:feedback\r\n})\r\n","import React, {Component} from 'react';\r\nimport Menu from \"./MenuComponent\";\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Header from \"./HeaderComponent\";\r\nimport Aboutus from \"./AboutComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport { Switch,Route,Redirect, withRouter } from 'react-router-dom';\r\nimport {connect } from 'react-redux';\r\nimport { postComment,fetchDishes,fetchComments,fetchPromos,fetchleaders, postFeedback} from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\n\r\n  //before connecting to store you need to define \r\n  // we derive all state from redux store\r\n  const mapStateToProps = state =>{\r\n    return{\r\n      dishes:state.dishes,\r\n      comments: state.comments,\r\n      promotions:state.promotions,\r\n      leaders : state.leaders\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = (dispatch) => ({\r\n      postComment: (dishId,rating,author,comment) => dispatch(postComment(dishId,rating,author,comment)),\r\n      fetchDishes:() =>{dispatch(fetchDishes())},\r\n      resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n      fetchComments: () => {dispatch(fetchComments())},\r\n      fetchPromos: () => {dispatch(fetchPromos())},\r\n      fetchleaders: () => {dispatch(fetchleaders())},\r\n      postFeedback : (name,email,subject,message,success) => dispatch(postFeedback(name,email,subject,message,success))\r\n    });\r\n\r\n  //dispatch (addcommnet()) recive a updated action object to sent to store.which will update state. this dispatch function will be used\r\n  //as props in below main component\r\n\r\nclass Main extends Component {\r\n \r\n\r\n//when component mounted than component didmount will called and fetchdishes function\r\n//called and it will direct to mapdispatchtoprops function and then\r\n//it will go to redux store loading and then its get ready to view in main component\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchleaders();\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const HomePage =() => {\r\n      return(\r\n        <Home\r\n          dish ={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n          dishesLoading ={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion ={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leaders = {this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}\r\n          leadersLoading ={this.props.leaders.isLoading}\r\n          leadersErrMess = {this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const  DishWithId =({match}) =>{\r\n      return(\r\n        // match with params with disid which is string will convert into int using part int and usign base 10 format and filter will recive array so we nned to extract first element of array using [0]\r\n        <Dishdetail dish={this.props.dishes.dishes.filter((dish)=>dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading= {this.props.dishes.isLoading}\r\n          errMess = {this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment)=>comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          // addComment ={this.props.addComment}\r\n          postComment={this.props.postComment}\r\n          />\r\n\r\n        );\r\n      \r\n    };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <div>\r\n        <TransitionGroup>\r\n          <CSSTransition key= {this.props.location.key} classNames = \"page\" timeout ={300}>\r\n              <Switch>\r\n                <Route path= '/home' component={HomePage}/>\r\n                {/* inline arraw function like menu dishes can also define as const homepage. both are same */}\r\n                <Route exact path=\"/menu\" component={()=> <Menu dishes= {this.props.dishes}/>} />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n                {/* redirect element mean if exact path will not match then application will reidrect to home page */}\r\n                  <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm} postFeedback = {this.props.postFeedback}/>}/>\r\n                  <Route path=\"/aboutus\" component ={()=> < Aboutus leaders ={this.props.leaders}/>}/>\r\n                <Redirect to =\"/home\"/> \r\n              </Switch>\r\n              </CSSTransition>\r\n      </TransitionGroup>\r\n      </div>\r\n  \r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n// this export line(73) will help to connect main component with redux","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\n\r\n//below is default implementation of dishes reducer function and return default initial state\r\nexport const Dishes =(state = {\r\nisLoading : true, errMess: null, dishes: [] \r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return{...state,isLoading:false, errMess:null,dishes:action.payload};\r\n\r\n\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return{...state,isLoading:true, errMess:null,dishes:[]};\r\n        \r\n        \r\n        case ActionTypes.DISHES_FAILED:\r\n            return{...state,isLoading:false, errMess:action.payload ,dishes:[]};\r\n\r\n    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\n\r\n//it recieve action type here and suppose to act\r\nexport const Comments =(state = { errMess :null, comments :[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess:null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            //state.length is js array and assign id\r\n            // comment.id = state.length;\r\n            // comment.date = new Date().toISOString();\r\n            return {...state, comments:state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n// import {PROMOTIONS} from '../shared/promotions';\r\n\r\nexport const Promotions =(state = {isLoading :true, errMess:null,promotions:[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n            case ActionTypes.PROMOS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, promotions: []}\r\n    \r\n            case ActionTypes.PROMOS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n       \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","//import {LEADERS} from \"../shared/leaders\";\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders =(state = {isLoading : true, errMess:null, leaders :[]}, action) => {\r\n    \r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state, isLoading:false, errMess: null, leaders:action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{ ...state, isLoading:true, errMess: null, leaders:[]};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return{...state, isLoading:false, errMess:action.payload, leaders:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const InitialFeedback = {\r\n    name :'',\r\n    email: '',\r\n    subject:'',\r\n    message: '',\r\n    \r\n\r\n};\r\n\r\n\r\nexport const feedback = (state= InitialFeedback, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.FEEDBACK:\r\n            return{\r\n                ...state,\r\n                success:\"Here you are\"\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {Component} from 'react';\nimport Main from \"./components/MainComponent\";\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport \"./App.css\";\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n \n render(){\n  return (\n    <Provider store={store}>\n    <HashRouter>\n    <div>\n     <Main/>\n    </div>\n    </HashRouter>\n    </Provider>\n  );\n\n}\n}\n\n\nexport default App;\n\n\n//provider  is allow to access of store into whole react application","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms} from 'react-redux-form';\r\nimport {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {InitialFeedback} from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store =createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger) \r\n        //these two are enhancer of createstore takes as second parameter\r\n    );\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n// import 'react-owl-carousel2/style.css'; //Allows for server-side rendering.\n// import 'owl.carousel/dist/assets/owl.carousel.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}